{"version":3,"file":"component---src-templates-post-template-tsx-3fd990f3f7ac5f986b39.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/PostContent.tsx/index.tsx","webpack://gatsby-starter-default/./src/components/PostHead/index.tsx","webpack://gatsby-starter-default/./src/components/Comment/index.tsx","webpack://gatsby-starter-default/./src/templates/post_template.tsx"],"sourcesContent":["// 게시글 본문\nimport React from 'react'\nimport { Link } from 'gatsby'\nimport { useRecoilValue } from 'recoil'\n\nimport styled from 'styled-components'\nimport './md.css'\n\nimport { toggleThemeAtom } from 'etc/atoms'\n\ninterface I_PostContent {\n  html: string\n  categories?: string[]\n  page: string\n}\n\nexport default function PostContent({ html, categories, page }: I_PostContent) {\n  const isDark = useRecoilValue(toggleThemeAtom)\n\n  return (\n    <>\n      <S_ContentContainer>\n        <S_Content\n          dangerouslySetInnerHTML={{ __html: html }}\n          className={\n            isDark\n              ? 'markdown-body markdown-dark'\n              : 'markdown-body markdown-light'\n          }\n        />\n      </S_ContentContainer>\n\n      {page === 'project' ? (\n        <>\n          <S_Prev to={`/project`}>목록 보기</S_Prev>\n        </>\n      ) : (\n        <>\n          <S_CategoryContainer>\n            <S_CategoryList>\n              {categories?.map((categorie, idx) => (\n                <S_CategoryItem key={idx}>{categorie}</S_CategoryItem>\n              ))}\n            </S_CategoryList>\n          </S_CategoryContainer>\n\n          <S_Prev to={`/study-blog`}>목록 보기</S_Prev>\n        </>\n      )}\n    </>\n  )\n}\n\nconst S_Prev = styled(Link)`\n  display: block;\n  margin: 120px auto 30px;\n  width: 180px;\n  padding: 13px 24px;\n  border-radius: 30px;\n  background: ${props => props.theme.colors.tabColor};\n  font-size: 18px;\n  font-weight: 700;\n  line-height: 28px;\n  letter-spacing: -0.5px;\n  color: ${props => props.theme.colors.textColor};\n  text-align: center;\n  cursor: pointer;\n  &:hover {\n    color: ${props => props.theme.colors.bgColor};\n    background: ${props => props.theme.colors.selectBoxColor};\n  }\n\n  @media ${props => props.theme.device.mobile} {\n    width: 150px;\n    padding: 10px 9px;\n    font-size: 16px;\n    line-height: 26px;\n  }\n`\n\nconst S_CategoryItem = styled.div`\n  display: inline-block;\n  overflow: hidden;\n  max-width: 100%;\n  height: 34px;\n  margin-right: 6px;\n  padding: 0 15px;\n  border-radius: 34px;\n  font-size: 13px;\n  line-height: 34px;\n  color: ${props => props.theme.colors.textColor};\n  background: ${props => props.theme.colors.tabColor};\n  letter-spacing: -0.5px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`\n\nconst S_CategoryList = styled.div`\n  text-align: center;\n`\n\nconst S_CategoryContainer = styled.div`\n  max-width: 816px;\n  margin: 110px auto 0;\n  padding: 0 24px;\n\n  @media ${props => props.theme.device.laptop} {\n    max-width: 630px;\n  }\n  @media ${props => props.theme.device.mobile} {\n    max-width: 364px;\n  }\n`\n\nconst S_Content = styled.div`\n  max-width: 816px;\n  margin: 84px auto 0;\n\n  @media ${props => props.theme.device.laptop} {\n    max-width: 630px;\n  }\n  @media ${props => props.theme.device.mobile} {\n    max-width: 364px;\n  }\n`\n\nconst S_ContentContainer = styled.div`\n  max-width: 816px;\n  margin: 84px auto 0;\n\n  @media ${props => props.theme.device.laptop} {\n    max-width: 630px;\n  }\n  @media ${props => props.theme.device.mobile} {\n    max-width: 364px;\n  }\n`\n","// 게시글 상단\nimport React from 'react'\nimport { GatsbyImage, IGatsbyImageData } from 'gatsby-plugin-image'\n\nimport styled from 'styled-components'\n\ninterface I_PostHead {\n  page: string\n  date?: string\n  startDate?: string\n  endDate?: string\n  title: string\n  subTitle?: string\n  categories?: string[]\n  team?: string[]\n  link?: string[]\n  gatsbyImageData?: IGatsbyImageData\n}\n\nexport default function PostHead({\n  page,\n  title,\n  subTitle,\n  date,\n  startDate,\n  endDate,\n  categories,\n  team,\n  link,\n  gatsbyImageData,\n}: I_PostHead) {\n  return (\n    <>\n      {page === 'project' ? (\n        <S_PostHeadContainer>\n          <S_ImageWrapper>\n            {gatsbyImageData && (\n              <GatsbyImage\n                image={gatsbyImageData}\n                alt=\"\"\n                style={{ height: '200px' }}\n                objectFit=\"contain\"\n              />\n            )}\n          </S_ImageWrapper>\n          <S_InfoContainer>\n            <S_DateWrapper>\n              <S_Date>\n                {startDate} ~ {endDate}\n              </S_Date>\n            </S_DateWrapper>\n            <S_TitleWrapper>{title}</S_TitleWrapper>\n            <span>{subTitle}</span>\n            <S_CategoryList>\n              {categories?.map((v, i) => (\n                <S_Category key={i}>{v}</S_Category>\n              ))}\n            </S_CategoryList>\n            <S_TeamWrapper>\n              <S_Role>{team && team[0].slice(0, -1)}</S_Role>\n              <S_Line>|</S_Line>\n              <S_TeamList>\n                {team?.map((v, i) => (\n                  <span key={i}>{v}</span>\n                ))}\n              </S_TeamList>\n            </S_TeamWrapper>\n            <S_LinkContainer>\n              {link && link[0] && (\n                <S_LinkIcon\n                  viewBox=\"0 0 24 24\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  onClick={() => window.open(link[0])}\n                >\n                  <path\n                    d=\"M12 4.92893L9.17158 7.75736L10.5858 9.17157L13.4142 6.34315C14.5809 5.17642 16.4901 5.17642 17.6569 6.34315C18.8236 7.50987 18.8236 9.41906 17.6569 10.5858L14.8284 13.4142L16.2426 14.8284L19.0711 12C21.0227 10.0484 21.0227 6.88055 19.0711 4.92893C17.1195 2.97732 13.9516 2.97732 12 4.92893ZM13.4142 14.8284L10.5858 17.6569C9.41906 18.8236 7.50988 18.8236 6.34315 17.6569C5.17642 16.4901 5.17642 14.5809 6.34315 13.4142L9.17158 10.5858L7.75736 9.17157L4.92894 12C2.97732 13.9516 2.97732 17.1195 4.92894 19.0711C6.88055 21.0227 10.0484 21.0227 12 19.0711L14.8284 16.2426L13.4142 14.8284ZM8.46447 14.1213L14.1213 8.46447L15.5355 9.87868L9.87868 15.5355L8.46447 14.1213ZM12 4.92893L9.17158 7.75736L10.5858 9.17157L13.4142 6.34315C14.5809 5.17642 16.4901 5.17642 17.6569 6.34315C18.8236 7.50987 18.8236 9.41906 17.6569 10.5858L14.8284 13.4142L16.2426 14.8284L19.0711 12C21.0227 10.0484 21.0227 6.88055 19.0711 4.92893C17.1195 2.97732 13.9516 2.97732 12 4.92893ZM13.4142 14.8284L10.5858 17.6569C9.41906 18.8236 7.50988 18.8236 6.34315 17.6569C5.17642 16.4901 5.17642 14.5809 6.34315 13.4142L9.17158 10.5858L7.75736 9.17157L4.92894 12C2.97732 13.9516 2.97732 17.1195 4.92894 19.0711C6.88055 21.0227 10.0484 21.0227 12 19.0711L14.8284 16.2426L13.4142 14.8284ZM8.46447 14.1213L14.1213 8.46447L15.5355 9.87868L9.87868 15.5355L8.46447 14.1213Z\"\n                    fill=\"currentColor\"\n                  />\n                </S_LinkIcon>\n              )}\n              {link && link[1] && (\n                <S_Icon\n                  viewBox=\"0 0 24 24\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  onClick={() => window.open(link[1])}\n                >\n                  <path\n                    d=\"M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12\"\n                    fill=\"currentColor\"\n                  />\n                </S_Icon>\n              )}\n            </S_LinkContainer>\n          </S_InfoContainer>\n        </S_PostHeadContainer>\n      ) : (\n        <S_PostHeadContainer>\n          {/* <S_DateWrapper>\n            <S_Date>{date}</S_Date>\n          </S_DateWrapper> */}\n          <S_TitleWrapper>{title}</S_TitleWrapper>\n        </S_PostHeadContainer>\n      )}\n    </>\n  )\n}\n\nconst S_Icon = styled.svg`\n  width: 36px;\n  height: 36px;\n  color: ${props => props.theme.colors.textColor};\n  cursor: pointer;\n  :hover {\n    opacity: 0.5;\n  }\n`\n\nconst S_LinkIcon = styled.svg`\n  width: 36px;\n  height: 36px;\n  color: ${props => props.theme.colors.subTextColor};\n  cursor: pointer;\n  :hover {\n    opacity: 0.5;\n  }\n`\n\nconst S_LinkContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 6px;\n  margin-top: 48px;\n`\n\nconst S_TeamList = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 6px;\n`\n\nconst S_Line = styled.p`\n  color: rgb(93, 98, 103);\n`\n\nconst S_Role = styled.div`\n  color: ${props => props.theme.colors.ownColor};\n`\n\nconst S_TeamWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 12px;\n  font-weight: 500;\n  font-size: 14px;\n\n  @media ${props => props.theme.device.mobile} {\n    font-size: 12px;\n  }\n`\n\nconst S_Category = styled.li`\n  list-style: none;\n  font-size: 14px;\n  line-height: 1.5;\n  padding: 2px 6px;\n  border-radius: 4px;\n  color: ${props => props.theme.colors.textColor};\n  background: ${props => props.theme.colors.tabColor};\n  white-space: nowrap;\n  text-overflow: ellipsis;\n\n  @media ${props => props.theme.device.mobile} {\n    font-size: 12px;\n  }\n`\n\nconst S_CategoryList = styled.ul`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 4px;\n  margin: 24px 0 8px;\n`\n\nconst S_ImageWrapper = styled.div`\n  width: 100%;\n  height: 200px;\n  background: ${props => props.theme.colors.bgColor};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  overflow: hidden;\n`\n\nconst S_TitleWrapper = styled.p`\n  margin-top: 24px;\n  font-size: 46px;\n  line-height: 1.3;\n  letter-spacing: -1px;\n  font-weight: 700;\n\n  @media ${props => props.theme.device.laptop} {\n    font-size: 42px;\n    line-height: 1.29;\n    letter-spacing: -0.8px;\n  }\n  @media ${props => props.theme.device.mobile} {\n    margin-top: 12px;\n    font-size: 32px;\n    line-height: 1.38;\n  }\n`\n\nconst S_Date = styled.span`\n  font-size: 18px;\n  letter-spacing: -0.5px;\n  color: ${props => props.theme.colors.postDateColor};\n\n  @media ${props => props.theme.device.mobile} {\n    font-size: 13px;\n    letter-spacing: -0.2px;\n  }\n`\n\nconst S_DateWrapper = styled.div`\n  line-height: 20px;\n`\n\nconst S_InfoContainer = styled.div`\n  margin-top: 48px;\n`\n\nconst S_PostHeadContainer = styled.div`\n  max-width: 816px;\n  padding: 0;\n  margin: 0 auto;\n  text-align: center;\n\n  @media ${props => props.theme.device.laptop} {\n    max-width: 630px;\n  }\n  @media ${props => props.theme.device.mobile} {\n    max-width: 364px;\n  }\n`\n","import React, { createRef, useEffect } from 'react'\nimport { useRecoilValue } from 'recoil'\n\nimport { toggleThemeAtom } from 'etc/atoms'\n\nconst src = 'https://utteranc.es/client.js'\nconst repo = 'wonjongjang/wonjongjang.github.io' // 자신 계정의 레포지토리로 설정\n\ninterface I_UtterancesAttributesType {\n  src: string\n  repo: string\n  'issue-term': string\n  label: string\n  theme: string\n  crossorigin: string\n  async: string\n}\n\nexport default function CommentWidget() {\n  const isDark = useRecoilValue(toggleThemeAtom)\n\n  const element = createRef<HTMLDivElement>()\n  useEffect(() => {\n    if (element.current === null) return\n\n    const firstChild = element.current.firstChild\n    if (firstChild) element.current.removeChild(firstChild)\n\n    const utterances: HTMLScriptElement = document.createElement('script')\n\n    const attributes: I_UtterancesAttributesType = {\n      src,\n      repo,\n      'issue-term': 'pathname',\n      label: 'Comment',\n      theme: isDark ? 'github-dark' : 'github-light',\n      crossorigin: 'anonymous',\n      async: 'true',\n    }\n\n    Object.entries(attributes).forEach(([key, value]) => {\n      utterances.setAttribute(key, value)\n    })\n\n    element.current.appendChild(utterances)\n  }, [isDark])\n\n  return <div ref={element} />\n}\n","import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Layout from 'components/Layout'\nimport PostHead from 'components/PostHead'\nimport PostContent from 'components/PostContent.tsx'\nimport CommentWidget from 'components/Comment/index'\n\nimport { I_PostItem } from 'etc/types'\n\ninterface I_PostTemplate {\n  location: {\n    href: string\n  }\n  data: {\n    allMarkdownRemark: {\n      edges: I_PostItem[]\n    }\n  }\n}\n\nexport default function PostTemplate({\n  location: { href },\n  data: {\n    allMarkdownRemark: { edges },\n  },\n}: I_PostTemplate) {\n  const {\n    node: {\n      frontmatter: { title, page, date, categories, subTitle },\n      html,\n    },\n  } = edges[0]\n\n  return (\n    <Layout title={title} description={subTitle} url={href}>\n      <PostHead title={title} page={page} date={date} />\n      <PostContent html={html} categories={categories} page={page} />\n      <CommentWidget />\n    </Layout>\n  )\n}\n\nexport const queryMarkdownDataBySlug = graphql`\n  query queryMarkdownDataBySlug($slug: String) {\n    allMarkdownRemark(filter: { fields: { slug: { eq: $slug } } }) {\n      edges {\n        node {\n          html\n          frontmatter {\n            page\n            categories\n            date(formatString: \"YYYY.MM.DD\")\n            title\n            subTitle\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["PostContent","html","categories","page","isDark","useRecoilValue","toggleThemeAtom","React","S_ContentContainer","S_Content","dangerouslySetInnerHTML","__html","className","S_Prev","to","S_CategoryContainer","S_CategoryList","map","categorie","idx","S_CategoryItem","key","styled","Link","props","theme","colors","tabColor","textColor","bgColor","selectBoxColor","device","mobile","laptop","PostHead","title","subTitle","date","startDate","endDate","team","link","gatsbyImageData","S_PostHeadContainer","S_ImageWrapper","GatsbyImage","image","alt","style","height","objectFit","S_InfoContainer","S_DateWrapper","S_Date","S_TitleWrapper","v","i","S_Category","S_TeamWrapper","S_Role","slice","S_Line","S_TeamList","S_LinkContainer","S_LinkIcon","viewBox","xmlns","onClick","window","open","d","fill","S_Icon","displayName","componentId","subTextColor","ownColor","postDateColor","CommentWidget","element","createRef","useEffect","current","firstChild","removeChild","utterances","document","createElement","attributes","src","repo","label","crossorigin","async","Object","entries","forEach","_ref","value","setAttribute","appendChild","ref","PostTemplate","location","href","data","allMarkdownRemark","edges","node","frontmatter","Layout","description","url"],"sourceRoot":""}