{"version":3,"file":"component---src-pages-study-blog-index-tsx-5806ca880524007e2d3f.js","mappings":"sQAae,SAASA,EAAS,GAMjB,IANiB,MAC/BC,EAAK,KACLC,EAAI,WACJC,EAAU,KACVC,EAAI,KACJC,GACW,EACX,OACEC,EAAAA,cAACC,EAAW,CAACC,GAAIH,GACfC,EAAAA,cAACG,EAAc,KACZN,aAAU,EAAVA,EAAYO,KAAIC,GACfL,EAAAA,cAACM,EAAc,CAACC,IAAKF,GAAWA,MAGpCL,EAAAA,cAACQ,EAAO,KAAEb,GACVK,EAAAA,cAACS,EAAM,KAAEb,GAGf,CAEA,MAAMa,EAASC,EAAAA,QAAAA,IAAAA,WAAU,4DAAVA,CAAU,sDAMnBF,EAAUE,EAAAA,QAAAA,IAAAA,WAAU,6DAAVA,CAAU,sEAOpBJ,EAAiBI,EAAAA,QAAAA,GAAAA,WAAS,oEAATA,CAAS,yHAMVC,GAASA,EAAMC,MAAMC,OAAOC,cAI5CX,EAAiBO,EAAAA,QAAAA,GAAAA,WAAS,oEAATA,CAAS,0CAM1BT,GAAcS,EAAAA,EAAAA,SAAOK,EAAAA,IAAK,4EAAZL,CAAY,yOAMVC,GAASA,EAAMC,MAAMC,OAAOG,WCrDnC,SAASC,EAAS,GAA0C,IAA1C,iBAAEC,EAAgB,MAAEC,GAAmB,EAgBtE,MAAM,aAAEC,EAAY,SAAEC,IAAoCC,EAAAA,EAAAA,GACxDJ,EACAC,GAGF,OACEnB,EAAAA,cAACC,EAAW,CAACsB,IAAKH,GACfC,EAASjB,KACRoB,IAAAA,IACEC,MAAM,GACJC,EACAC,QAAQ,KAAEC,GAAM,YAChBC,IAES,SACX7B,EAAAA,cAACN,EAAQ,iBAAKmC,EAAW,CAAE9B,KAAM6B,EAAMrB,IAAKmB,IAAM,IAK5D,CAEA,MAAMzB,EAAcS,EAAAA,QAAAA,IAAAA,WAAU,gEAAVA,CAAU,8FAMnBC,GAASA,EAAMC,MAAMkB,OAAOC,SC/BxB,SAASC,EAAU,GAKlB,IAJdC,UAAU,OAAEC,EAAM,KAAEC,GACpBC,MACEC,mBAAmB,MAAEC,KAEX,EACZ,MAAMC,EAA8BC,EAAAA,EAAAA,MAAkBN,GAChDhB,EACuB,iBAApBqB,EAAOlC,UAA0BkC,EAAOlC,SAE3CkC,EAAOlC,SADP,MAIAoC,EAAYH,EAAMI,QACtBC,GAAuC,eAA/BA,EAAKlB,KAAKI,YAAY/B,OAI1B8C,GAAeC,EAAAA,EAAAA,UACnB,IACEJ,EAAUK,QACR,CACEC,EAAoC,KAMjC,IAJDtB,MACEI,aAAa,WAAEhC,KAEN,EASb,OAPAA,SAAAA,EAAYmD,SAAQ3C,SACK4C,IAAnBF,EAAK1C,GAAyB0C,EAAK1C,GAAY,EAC9C0C,EAAK1C,IAAW,IAGvB0C,EAAU,MAEHA,CAAI,GAEb,CAAEG,IAAK,KAEX,IAGF,OACElD,EAAAA,cAACmD,EAAAA,GAAM,CAACxD,MAAM,aAAayD,YAAY,cAAcC,IAAKlB,GACxDnC,EAAAA,cAACsD,EAAAA,kBAAiB,KAChBtD,EAAAA,cAACuD,EAAAA,YAAW,KAAC,cACbvD,EAAAA,cAACwD,EAAAA,eAAc,KAAC,gBAElBxD,EAAAA,cAACyD,EAAAA,UAAS,KAERzD,EAAAA,cAAC0D,EAAAA,EAAY,CACX5D,KAAM2C,EAAU,GAAGhB,KAAKI,YAAY/B,KACpCoB,iBAAkBA,EAClB0B,aAAcA,IAGhB5C,EAAAA,cAACiB,EAAQ,CAACC,iBAAkBA,EAAkBC,MAAOsB,KAI7D,C","sources":["webpack://gatsby-starter-default/./src/components/Blog/BlogItem/index.tsx","webpack://gatsby-starter-default/./src/components/Blog/BlogList/index.tsx","webpack://gatsby-starter-default/./src/pages/study-blog/index.tsx"],"sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\n\nimport styled from 'styled-components'\n\ninterface I_BlogItem {\n  title: string\n  date: string\n  categories: string[]\n  page: string\n  link: string\n}\n\nexport default function BlogItem({\n  title,\n  date,\n  categories,\n  page,\n  link,\n}: I_BlogItem) {\n  return (\n    <S_Container to={link}>\n      <S_CategoryList>\n        {categories?.map(category => (\n          <S_CategoryItem key={category}>{category}</S_CategoryItem>\n        ))}\n      </S_CategoryList>\n      <S_Title>{title}</S_Title>\n      <S_Date>{date}</S_Date>\n    </S_Container>\n  )\n}\n\nconst S_Date = styled.div`\n  font-size: 13px;\n  line-height: 19px;\n  font-weight: 300;\n`\n\nconst S_Title = styled.div`\n  font-size: 22px;\n  font-weight: 700;\n  line-height: 32px;\n  margin-top: 13px;\n`\n\nconst S_CategoryItem = styled.li`\n  height: 34px;\n  padding: 0 15px;\n  border-radius: 34px;\n  font-size: 13px;\n  line-height: 34px;\n  background-color: ${props => props.theme.colors.boxTabColor};\n  list-style: none;\n`\n\nconst S_CategoryList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 5px;\n`\n\nconst S_Container = styled(Link)`\n  border-radius: 14px;\n  cursor: pointer;\n  padding: 25px 24px;\n  box-shadow: 4px 12px 30px 6px rgb(0 0 0 / 9%);\n  transition: 0.3s box-shadow;\n  background-color: ${props => props.theme.colors.boxColor};\n  &:hover {\n    box-shadow: 4px 12px 30px 6px rgb(0 0 0 / 18%);\n    transform: translateY(-2px);\n  }\n`\n","import React from 'react'\n\nimport styled from 'styled-components'\n\nimport { I_PostItem } from 'etc/types'\nimport useInfiniteScroll, {\n  useInfiniteScrollType,\n} from 'hooks/useInfiniteScroll'\nimport BlogItem from 'components/Blog/BlogItem'\n\ninterface I_BlogList {\n  selectedCategory: string\n  posts: I_PostItem[]\n}\n\nexport default function BlogList({ selectedCategory, posts }: I_BlogList) {\n  // const postListData = useMemo(\n  //   () =>\n  //     posts.filter(\n  //       ({\n  //         node: {\n  //           frontmatter: { categories },\n  //         },\n  //       }: PostListItemType) =>\n  //         selectedCategory !== 'All'\n  //           ? categories.includes(selectedCategory)\n  //           : true,\n  //     ),\n  //   [selectedCategory],\n  // )\n\n  const { containerRef, postList }: useInfiniteScrollType = useInfiniteScroll(\n    selectedCategory,\n    posts,\n  )\n\n  return (\n    <S_Container ref={containerRef}>\n      {postList.map(\n        ({\n          node: {\n            id,\n            fields: { slug },\n            frontmatter,\n          },\n        }: I_PostItem) => (\n          <BlogItem {...frontmatter} link={slug} key={id} />\n        ),\n      )}\n    </S_Container>\n  )\n}\n\nconst S_Container = styled.div`\n  margin-top: 48px;\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n\n  @media ${props => props.theme.device.tablet} {\n    margin-top: 36px;\n  }\n`\n","import React, { useMemo } from 'react'\nimport { graphql } from 'gatsby'\nimport queryString, { ParsedQuery } from 'query-string'\n\nimport {\n  S_FadeInAnimation,\n  S_PageDescript,\n  S_PageTitle,\n  S_Section,\n} from 'pages'\nimport { I_CategoryList, I_PostItem } from 'etc/types'\nimport Layout from 'components/Layout'\nimport CategoryList from 'components/CategoryList'\nimport BlogList from 'components/Blog/BlogList'\n\ninterface I_StudyBlog {\n  location: {\n    pathname: string\n    search: string\n    href: string\n  }\n  data: {\n    allMarkdownRemark: {\n      edges: I_PostItem[]\n    }\n  }\n}\n\nexport default function StudyBlog({\n  location: { search, href },\n  data: {\n    allMarkdownRemark: { edges },\n  },\n}: I_StudyBlog) {\n  const parsed: ParsedQuery<string> = queryString.parse(search)\n  const selectedCategory: string =\n    typeof parsed.category !== 'string' || !parsed.category\n      ? 'All'\n      : parsed.category\n\n  // study-blog에 해당하는 게시물\n  const pageEdges = edges.filter(\n    edge => edge.node.frontmatter.page === 'study-blog',\n  )\n\n  // study-blog에 해당하는 게시물 중 카테고리 별 개수\n  const categoryList = useMemo(\n    () =>\n      pageEdges.reduce(\n        (\n          list: I_CategoryList['categoryList'],\n          {\n            node: {\n              frontmatter: { categories },\n            },\n          }: I_PostItem,\n        ) => {\n          categories?.forEach(category => {\n            if (list[category] === undefined) list[category] = 1\n            else list[category]++\n          })\n\n          list['All']++\n\n          return list\n        },\n        { All: 0 },\n      ),\n    [],\n  )\n\n  return (\n    <Layout title=\"Study Blog\" description=\"개발하면서 남긴 기록\" url={href}>\n      <S_FadeInAnimation>\n        <S_PageTitle>Study Blog</S_PageTitle>\n        <S_PageDescript>공부하면서 남긴 기록</S_PageDescript>\n      </S_FadeInAnimation>\n      <S_Section>\n        {/* 카테고리 */}\n        <CategoryList\n          page={pageEdges[0].node.frontmatter.page}\n          selectedCategory={selectedCategory}\n          categoryList={categoryList}\n        />\n        {/* 게시물 목록 */}\n        <BlogList selectedCategory={selectedCategory} posts={pageEdges} />\n      </S_Section>\n    </Layout>\n  )\n}\n\nexport const getBlogList = graphql`\n  query getPostList {\n    allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___date, frontmatter___title] }\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            page\n            categories\n            date(formatString: \"YYYY.MM.DD\")\n            title\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["BlogItem","title","date","categories","page","link","React","S_Container","to","S_CategoryList","map","category","S_CategoryItem","key","S_Title","S_Date","styled","props","theme","colors","boxTabColor","Link","boxColor","BlogList","selectedCategory","posts","containerRef","postList","useInfiniteScroll","ref","_ref2","node","id","fields","slug","frontmatter","device","tablet","StudyBlog","location","search","href","data","allMarkdownRemark","edges","parsed","queryString","pageEdges","filter","edge","categoryList","useMemo","reduce","list","forEach","undefined","All","Layout","description","url","S_FadeInAnimation","S_PageTitle","S_PageDescript","S_Section","CategoryList"],"sourceRoot":""}