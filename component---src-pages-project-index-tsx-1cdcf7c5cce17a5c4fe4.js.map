{"version":3,"file":"component---src-pages-project-index-tsx-1cdcf7c5cce17a5c4fe4.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/CategoryList/index.tsx","webpack://gatsby-starter-default/./src/hooks/useInfiniteScroll.tsx","webpack://gatsby-starter-default/./src/pages/index.tsx","webpack://gatsby-starter-default/./src/components/Project/ProjectItem/index.tsx","webpack://gatsby-starter-default/./src/components/Project/ProjectList/index.tsx","webpack://gatsby-starter-default/./src/pages/project/index.tsx","webpack://gatsby-starter-default/./node_modules/decode-uri-component/index.js","webpack://gatsby-starter-default/./node_modules/split-on-first/index.js","webpack://gatsby-starter-default/./node_modules/filter-obj/index.js","webpack://gatsby-starter-default/./node_modules/query-string/base.js","webpack://gatsby-starter-default/./node_modules/query-string/index.js"],"sourcesContent":["import React, { ReactNode } from 'react'\nimport { Link } from 'gatsby'\n\nimport styled from 'styled-components'\n\nexport interface CategoryListProps {\n  page: string\n  selectedCategory: string\n  categoryList: {\n    [key: string]: number\n  }\n}\n\ninterface ActiveProps {\n  active: boolean\n}\n\ninterface LinkProps {\n  children: ReactNode\n  className?: string\n  to: string\n  active: boolean\n}\n\nexport default function CategoryList({\n  page,\n  selectedCategory,\n  categoryList,\n}: CategoryListProps) {\n  return (\n    <CategoryListWrapper>\n      {Object.entries(categoryList).map(([name, count]) => (\n        <CategoryItem\n          to={`/${page}/?category=${name}`}\n          active={name === selectedCategory}\n          key={name}\n        >\n          {name}\n        </CategoryItem>\n      ))}\n    </CategoryListWrapper>\n  )\n}\n\nconst CategoryItem = styled(({ active, ...props }: LinkProps) => (\n  <Link {...props} />\n))<ActiveProps>`\n  margin-right: 10px;\n  height: 37px;\n  padding: 0 17px;\n  font-size: 14px;\n  line-height: 37px;\n  border-radius: 30px;\n  letter-spacing: -0.5px;\n  cursor: pointer;\n  &:hover {\n    color: ${props => props.theme.bgColor};\n    background: ${props => props.theme.selectBoxColor};\n  }\n  color: ${props =>\n    props.active ? props.theme.bgColor : props.theme.textColor};\n  background: ${props =>\n    props.active ? props.theme.selectBoxColor : props.theme.tabColor};\n\n  @media screen and (min-width: 1024px) {\n    height: 44px;\n    padding: 0 20px;\n    font-size: 16px;\n    line-height: 43px;\n  }\n`\n\nconst CategoryListWrapper = styled.div`\n  display: flex;\n\n  @media screen and (max-width: 1024px) {\n    overflow-x: auto;\n    white-space: nowrap;\n    -webkit-overflow-scrolling: touch;\n  }\n`\n","import { MutableRefObject, useState, useRef, useMemo, useEffect } from 'react'\n\nimport { ItemType } from 'etc/types'\n\nexport interface useInfiniteScrollType {\n  containerRef: MutableRefObject<HTMLDivElement | null>\n  postList: ItemType[]\n}\n\nconst NUMBER_OF_ITEMS_PER_PAGE = 6\n\nexport default function useInfiniteScroll(\n  selectedCategory: string,\n  posts: ItemType[],\n): useInfiniteScrollType {\n  const containerRef: MutableRefObject<HTMLDivElement | null> =\n    useRef<HTMLDivElement>(null)\n  const observer: MutableRefObject<IntersectionObserver | null> =\n    useRef<IntersectionObserver>(null)\n  const [count, setCount] = useState<number>(1)\n\n  const postListByCategory = useMemo<ItemType[]>(\n    () =>\n      posts.filter(\n        ({\n          node: {\n            frontmatter: { categories },\n          },\n        }: ItemType) =>\n          selectedCategory !== 'All'\n            ? categories?.includes(selectedCategory)\n            : true,\n      ),\n    [selectedCategory],\n  )\n\n  useEffect(() => {\n    observer.current = new IntersectionObserver((entries, observer) => {\n      if (!entries[0].isIntersecting) return\n\n      setCount(value => value + 1)\n      observer.unobserve(entries[0].target)\n    })\n  }, [])\n\n  useEffect(() => setCount(1), [selectedCategory])\n\n  useEffect(() => {\n    if (\n      NUMBER_OF_ITEMS_PER_PAGE * count >= postListByCategory.length ||\n      containerRef.current === null ||\n      containerRef.current.children.length === 0 ||\n      observer.current === null\n    )\n      return\n\n    observer.current.observe(\n      containerRef.current.children[containerRef.current.children.length - 1],\n    )\n  }, [count, selectedCategory])\n\n  return {\n    containerRef,\n    postList: postListByCategory.slice(0, count * NUMBER_OF_ITEMS_PER_PAGE),\n  }\n}\n","import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport styled from 'styled-components'\n\nimport Layout from 'components/Layout'\n\ninterface HomeProps {\n  location: {\n    search: string\n  }\n  data: {\n    site: {\n      siteMetadata: {\n        title: string\n        description: string\n        siteUrl: string\n      }\n    }\n  }\n}\n\nexport default function Home({\n  location: { search },\n  data: {\n    site: {\n      siteMetadata: { title, description, siteUrl },\n    },\n  },\n}: HomeProps) {\n  return (\n    <Layout title={title} description={description} url={siteUrl}>\n      <PageTitle>I'm Wonjong Jang,</PageTitle>\n      <PageTitle>a Frontend Developer.</PageTitle>\n      <PageDescript>프론트엔드 개발자 장원종입니다.</PageDescript>\n    </Layout>\n  )\n}\n\nexport const getPostList = graphql`\n  query getPostList {\n    site {\n      siteMetadata {\n        title\n        description\n        siteUrl\n      }\n    }\n  }\n`\n\nexport const Section = styled.div`\n  margin-top: 48px;\n\n  @media screen and (min-width: 1024px) {\n    margin-top: 72px;\n  }\n`\n\nexport const PageDescript = styled.p`\n  margin-top: 4px;\n  font-size: 22px;\n  font-weight: 400;\n  color: ${props => props.theme.subTextColor};\n\n  @media screen and (min-width: 1024px) {\n    font-size: 28px;\n  }\n`\n\nexport const PageTitle = styled.p`\n  font-size: 30px;\n  font-weight: 700;\n\n  @media screen and (min-width: 1024px) {\n    font-size: 36px;\n  }\n`\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport { GatsbyImage, IGatsbyImageData } from 'gatsby-plugin-image'\n\nimport styled from 'styled-components'\n\ninterface ProjectItemProps {\n  title: string\n  subTitle: string\n  categories: string[]\n  startDate: string\n  endDate: string\n  page: string\n  link: string\n  thumbnail: {\n    childImageSharp: {\n      gatsbyImageData: IGatsbyImageData\n    }\n  }\n}\n\nexport default function ProjectItem({\n  title,\n  subTitle,\n  categories,\n  startDate,\n  endDate,\n  page,\n  link,\n  thumbnail: {\n    childImageSharp: { gatsbyImageData },\n  },\n}: ProjectItemProps) {\n  return (\n    <ProjectItemWrapper>\n      <CardLink to={link}>\n        <Card>\n          <TitleWrapper>\n            <Title>{title}</Title>\n            <SubTitle>{subTitle}</SubTitle>\n          </TitleWrapper>\n          <DateWrapper>\n            {startDate} ~ {endDate}\n          </DateWrapper>\n          <Category>\n            {categories?.map((category, i) => (\n              <CategoryItem key={i}>{category}</CategoryItem>\n            ))}\n          </Category>\n          <ImageWrapper>\n            <Img image={gatsbyImageData} alt=\"\" />\n          </ImageWrapper>\n        </Card>\n      </CardLink>\n    </ProjectItemWrapper>\n  )\n}\n\nconst Img = styled(GatsbyImage)`\n  width: 100%;\n  height: 223px;\n  border-radius: 0 0 14px 14px;\n`\n\nconst ImageWrapper = styled.div`\n  margin: 14px -24px 0;\n`\n\nconst DateWrapper = styled.div`\n  overflow: hidden;\n  height: 19px;\n  margin-top: 14px;\n  font-size: 13px;\n  line-height: 19px;\n  color: ${props => props.theme.subTextColor};\n\n  @media screen and (min-width: 1439px) {\n    font-size: 14px;\n    line-height: 20px;\n  }\n`\n\nconst SubTitle = styled.div`\n  display: -webkit-box;\n  overflow: hidden;\n  -webkit-box-orient: vertical;\n  -webkit-line-clamp: 2;\n  font-size: 16px;\n  line-height: 19px;\n\n  @media screen and (min-width: 767px) {\n    font-size: 14px;\n    line-height: 16px;\n  }\n  @media screen and (min-width: 1439px) {\n    font-size: 18px;\n    line-height: 20px;\n  }\n`\n\nconst Title = styled.div`\n  font-weight: bold;\n  font-size: 26px;\n  line-height: 36px;\n\n  @media screen and (min-width: 767px) {\n    font-size: 22px;\n    line-height: 32px;\n  }\n  @media screen and (min-width: 1439px) {\n    font-size: 30px;\n    line-height: 40px;\n  }\n`\n\nconst TitleWrapper = styled.div`\n  height: 72px;\n\n  @media screen and (min-width: 767px) {\n    height: 64px;\n  }\n  @media screen and (min-width: 1439px) {\n    height: 80px;\n  }\n`\n\nconst CategoryItem = styled.div`\n  margin-right: 5px;\n  font-weight: 700;\n  font-size: 13px;\n  line-height: 13px;\n  color: ${props => props.theme.ownColorHover};\n`\n\nconst Category = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  height: 26px;\n  overflow: hidden;\n`\n\nconst Card = styled.div`\n  position: relative;\n  padding: 25px 24px 0;\n  border-radius: 14px;\n  cursor: pointer;\n  box-shadow: 4px 12px 30px 6px rgb(0 0 0 / 9%);\n  transition: 0.3s box-shadow;\n  &:hover {\n    box-shadow: 4px 12px 30px 6px rgb(0 0 0 / 18%);\n    transform: translateY(-2px);\n  }\n  background-color: ${props => props.theme.boxColor};\n`\n\nconst CardLink = styled(Link)``\n\nconst ProjectItemWrapper = styled.li`\n  list-style: none;\n  margin-top: 36px;\n  width: 100%;\n  padding: 0;\n\n  @media screen and (min-width: 767px) {\n    padding: 0 18px;\n  }\n  @media screen and (min-width: 1024px) {\n    padding: 0 15px;\n  }\n  @media screen and (min-width: 1439px) {\n    padding: 0 18px;\n  }\n`\n","import React from 'react'\n\nimport styled from 'styled-components'\n\nimport { ItemType } from 'etc/types'\nimport useInfiniteScroll, {\n  useInfiniteScrollType,\n} from 'hooks/useInfiniteScroll'\nimport ProjectItem from '../ProjectItem'\n\ninterface ProjectListProps {\n  posts: ItemType[]\n  selectedCategory: string\n}\n\nexport default function ProjectList({\n  selectedCategory,\n  posts,\n}: ProjectListProps) {\n  const { containerRef, postList }: useInfiniteScrollType = useInfiniteScroll(\n    selectedCategory,\n    posts,\n  )\n\n  return (\n    <ProjectListWrapper ref={containerRef}>\n      {postList.map(\n        ({\n          node: {\n            id,\n            fields: { slug },\n            frontmatter,\n          },\n        }: ItemType) => (\n          <ProjectItem {...frontmatter} link={slug} key={id} />\n        ),\n      )}\n    </ProjectListWrapper>\n  )\n}\n\nconst ProjectListWrapper = styled.div`\n  display: grid;\n  grid-template-columns: repeat(1, 1fr);\n\n  @media screen and (min-width: 767px) {\n    grid-template-columns: repeat(2, 1fr);\n  }\n  @media screen and (min-width: 1024px) {\n    grid-template-columns: repeat(3, 1fr);\n  }\n`\n","import React, { useMemo } from 'react'\nimport { graphql } from 'gatsby'\nimport queryString, { ParsedQuery } from 'query-string'\n\nimport { PageDescript, PageTitle, Section } from 'pages'\n\nimport { ItemType } from 'etc/types'\nimport CategoryList, { CategoryListProps } from 'components/CategoryList'\nimport Layout from 'components/Layout'\nimport ProjectList from 'components/Project/ProjectList'\n\ninterface ProjectProps {\n  location: {\n    search: string\n    href: string\n  }\n  data: {\n    allMarkdownRemark: {\n      edges: ItemType[]\n    }\n  }\n}\n\nexport default function Project({\n  location: { search, href },\n  data: {\n    allMarkdownRemark: { edges },\n  },\n}: ProjectProps) {\n  const parsed: ParsedQuery<string> = queryString.parse(search)\n  const selectedCategory: string =\n    typeof parsed.category !== 'string' || !parsed.category\n      ? 'All'\n      : parsed.category\n\n  // project에 해당하는 게시물\n  const pageEdges = edges.filter(\n    edge => edge.node.frontmatter.page === 'project',\n  )\n\n  // project에 해당하는 게시물 중 카테고리 별 개수\n  const categoryList = useMemo(\n    () =>\n      pageEdges.reduce(\n        (\n          list: CategoryListProps['categoryList'],\n          {\n            node: {\n              frontmatter: { categories },\n            },\n          }: ItemType,\n        ) => {\n          categories?.forEach(category => {\n            if (list[category] === undefined) list[category] = 1\n            else list[category]++\n          })\n\n          list['All']++\n\n          return list\n        },\n        { All: 0 },\n      ),\n    [],\n  )\n\n  return (\n    <Layout title=\"Project\" description=\"작업한 프로젝트\" url={href}>\n      <div>\n        <PageTitle>Project</PageTitle>\n        <PageDescript>작업한 프로젝트</PageDescript>\n      </div>\n      <Section>\n        {/* 카테고리 */}\n        <CategoryList\n          page={pageEdges[0].node.frontmatter.page}\n          selectedCategory={selectedCategory}\n          categoryList={categoryList}\n        />\n        {/* 프로젝트 목록 */}\n        <ProjectList selectedCategory={selectedCategory} posts={pageEdges} />\n      </Section>\n    </Layout>\n  )\n}\n\nexport const getProjectList = graphql`\n  query getProjectList {\n    allMarkdownRemark(\n      sort: {\n        order: DESC\n        fields: [frontmatter___startDate, frontmatter___title]\n      }\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            page\n            categories\n            startDate(formatString: \"YYYY.MM.DD\")\n            endDate(formatString: \"YYYY.MM.DD\")\n            title\n            subTitle\n            thumbnail {\n              childImageSharp {\n                gatsbyImageData(width: 768, height: 446)\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","const token = '%[a-f0-9]{2}';\nconst singleMatcher = new RegExp('(' + token + ')|([^%]+?)', 'gi');\nconst multiMatcher = new RegExp('(' + token + ')+', 'gi');\n\nfunction decodeComponents(components, split) {\n\ttry {\n\t\t// Try to decode the entire string first\n\t\treturn [decodeURIComponent(components.join(''))];\n\t} catch {\n\t\t// Do nothing\n\t}\n\n\tif (components.length === 1) {\n\t\treturn components;\n\t}\n\n\tsplit = split || 1;\n\n\t// Split the array in 2 parts\n\tconst left = components.slice(0, split);\n\tconst right = components.slice(split);\n\n\treturn Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n}\n\nfunction decode(input) {\n\ttry {\n\t\treturn decodeURIComponent(input);\n\t} catch {\n\t\tlet tokens = input.match(singleMatcher) || [];\n\n\t\tfor (let i = 1; i < tokens.length; i++) {\n\t\t\tinput = decodeComponents(tokens, i).join('');\n\n\t\t\ttokens = input.match(singleMatcher) || [];\n\t\t}\n\n\t\treturn input;\n\t}\n}\n\nfunction customDecodeURIComponent(input) {\n\t// Keep track of all the replacements and prefill the map with the `BOM`\n\tconst replaceMap = {\n\t\t'%FE%FF': '\\uFFFD\\uFFFD',\n\t\t'%FF%FE': '\\uFFFD\\uFFFD',\n\t};\n\n\tlet match = multiMatcher.exec(input);\n\twhile (match) {\n\t\ttry {\n\t\t\t// Decode as big chunks as possible\n\t\t\treplaceMap[match[0]] = decodeURIComponent(match[0]);\n\t\t} catch {\n\t\t\tconst result = decode(match[0]);\n\n\t\t\tif (result !== match[0]) {\n\t\t\t\treplaceMap[match[0]] = result;\n\t\t\t}\n\t\t}\n\n\t\tmatch = multiMatcher.exec(input);\n\t}\n\n\t// Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n\treplaceMap['%C2'] = '\\uFFFD';\n\n\tconst entries = Object.keys(replaceMap);\n\n\tfor (const key of entries) {\n\t\t// Replace all decoded components\n\t\tinput = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n\t}\n\n\treturn input;\n}\n\nexport default function decodeUriComponent(encodedURI) {\n\tif (typeof encodedURI !== 'string') {\n\t\tthrow new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\n\t}\n\n\ttry {\n\t\t// Try the built in decoder first\n\t\treturn decodeURIComponent(encodedURI);\n\t} catch {\n\t\t// Fallback to a more advanced decoder\n\t\treturn customDecodeURIComponent(encodedURI);\n\t}\n}\n","export default function splitOnFirst(string, separator) {\n\tif (!(typeof string === 'string' && typeof separator === 'string')) {\n\t\tthrow new TypeError('Expected the arguments to be of type `string`');\n\t}\n\n\tif (string === '' || separator === '') {\n\t\treturn [];\n\t}\n\n\tconst separatorIndex = string.indexOf(separator);\n\n\tif (separatorIndex === -1) {\n\t\treturn [];\n\t}\n\n\treturn [\n\t\tstring.slice(0, separatorIndex),\n\t\tstring.slice(separatorIndex + separator.length)\n\t];\n}\n","export function includeKeys(object, predicate) {\n\tconst result = {};\n\n\tif (Array.isArray(predicate)) {\n\t\tfor (const key of predicate) {\n\t\t\tconst descriptor = Object.getOwnPropertyDescriptor(object, key);\n\t\t\tif (descriptor?.enumerable) {\n\t\t\t\tObject.defineProperty(result, key, descriptor);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// `Reflect.ownKeys()` is required to retrieve symbol properties\n\t\tfor (const key of Reflect.ownKeys(object)) {\n\t\t\tconst descriptor = Object.getOwnPropertyDescriptor(object, key);\n\t\t\tif (descriptor.enumerable) {\n\t\t\t\tconst value = object[key];\n\t\t\t\tif (predicate(key, value, object)) {\n\t\t\t\t\tObject.defineProperty(result, key, descriptor);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function excludeKeys(object, predicate) {\n\tif (Array.isArray(predicate)) {\n\t\tconst set = new Set(predicate);\n\t\treturn includeKeys(object, key => !set.has(key));\n\t}\n\n\treturn includeKeys(object, (key, value, object) => !predicate(key, value, object));\n}\n","import decodeComponent from 'decode-uri-component';\nimport splitOnFirst from 'split-on-first';\nimport {includeKeys} from 'filter-obj';\n\nconst isNullOrUndefined = value => value === null || value === undefined;\n\n// eslint-disable-next-line unicorn/prefer-code-point\nconst strictUriEncode = string => encodeURIComponent(string).replace(/[!'()*]/g, x => `%${x.charCodeAt(0).toString(16).toUpperCase()}`);\n\nconst encodeFragmentIdentifier = Symbol('encodeFragmentIdentifier');\n\nfunction encoderForArrayFormat(options) {\n\tswitch (options.arrayFormat) {\n\t\tcase 'index': {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tconst index = result.length;\n\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result, [encode(key, options), '[', index, ']'].join(''),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\n\t\tcase 'bracket': {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result,\n\t\t\t\t\t\t[encode(key, options), '[]'].join(''),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[]=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\n\t\tcase 'colon-list-separator': {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result,\n\t\t\t\t\t\t[encode(key, options), ':list='].join(''),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), ':list=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\tcase 'bracket-separator': {\n\t\t\tconst keyValueSep = options.arrayFormat === 'bracket-separator'\n\t\t\t\t? '[]='\n\t\t\t\t: '=';\n\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\t// Translate null to an empty string so that it doesn't serialize as 'null'\n\t\t\t\tvalue = value === null ? '' : value;\n\n\t\t\t\tif (result.length === 0) {\n\t\t\t\t\treturn [[encode(key, options), keyValueSep, encode(value, options)].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [[result, encode(value, options)].join(options.arrayFormatSeparator)];\n\t\t\t};\n\t\t}\n\n\t\tdefault: {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result,\n\t\t\t\t\t\tencode(key, options),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\t}\n}\n\nfunction parserForArrayFormat(options) {\n\tlet result;\n\n\tswitch (options.arrayFormat) {\n\t\tcase 'index': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /\\[(\\d*)]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\t\t}\n\n\t\tcase 'bracket': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(\\[])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...accumulator[key], value];\n\t\t\t};\n\t\t}\n\n\t\tcase 'colon-list-separator': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(:list)$/.exec(key);\n\t\t\t\tkey = key.replace(/:list$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...accumulator[key], value];\n\t\t\t};\n\t\t}\n\n\t\tcase 'comma':\n\t\tcase 'separator': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = typeof value === 'string' && value.includes(options.arrayFormatSeparator);\n\t\t\t\tconst isEncodedArray = (typeof value === 'string' && !isArray && decode(value, options).includes(options.arrayFormatSeparator));\n\t\t\t\tvalue = isEncodedArray ? decode(value, options) : value;\n\t\t\t\tconst newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map(item => decode(item, options)) : (value === null ? value : decode(value, options));\n\t\t\t\taccumulator[key] = newValue;\n\t\t\t};\n\t\t}\n\n\t\tcase 'bracket-separator': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = /(\\[])$/.test(key);\n\t\t\t\tkey = key.replace(/\\[]$/, '');\n\n\t\t\t\tif (!isArray) {\n\t\t\t\t\taccumulator[key] = value ? decode(value, options) : value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst arrayValue = value === null\n\t\t\t\t\t? []\n\t\t\t\t\t: value.split(options.arrayFormatSeparator).map(item => decode(item, options));\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = arrayValue;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...accumulator[key], ...arrayValue];\n\t\t\t};\n\t\t}\n\n\t\tdefault: {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...[accumulator[key]].flat(), value];\n\t\t\t};\n\t\t}\n\t}\n}\n\nfunction validateArrayFormatSeparator(value) {\n\tif (typeof value !== 'string' || value.length !== 1) {\n\t\tthrow new TypeError('arrayFormatSeparator must be single character string');\n\t}\n}\n\nfunction encode(value, options) {\n\tif (options.encode) {\n\t\treturn options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction decode(value, options) {\n\tif (options.decode) {\n\t\treturn decodeComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t}\n\n\tif (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input))\n\t\t\t.sort((a, b) => Number(a) - Number(b))\n\t\t\t.map(key => input[key]);\n\t}\n\n\treturn input;\n}\n\nfunction removeHash(input) {\n\tconst hashStart = input.indexOf('#');\n\tif (hashStart !== -1) {\n\t\tinput = input.slice(0, hashStart);\n\t}\n\n\treturn input;\n}\n\nfunction getHash(url) {\n\tlet hash = '';\n\tconst hashStart = url.indexOf('#');\n\tif (hashStart !== -1) {\n\t\thash = url.slice(hashStart);\n\t}\n\n\treturn hash;\n}\n\nfunction parseValue(value, options) {\n\tif (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === 'string' && value.trim() !== '')) {\n\t\tvalue = Number(value);\n\t} else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\n\t\tvalue = value.toLowerCase() === 'true';\n\t}\n\n\treturn value;\n}\n\nexport function extract(input) {\n\tinput = removeHash(input);\n\tconst queryStart = input.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\n\treturn input.slice(queryStart + 1);\n}\n\nexport function parse(query, options) {\n\toptions = {\n\t\tdecode: true,\n\t\tsort: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',',\n\t\tparseNumbers: false,\n\t\tparseBooleans: false,\n\t\t...options,\n\t};\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst formatter = parserForArrayFormat(options);\n\n\t// Create an object with no prototype\n\tconst returnValue = Object.create(null);\n\n\tif (typeof query !== 'string') {\n\t\treturn returnValue;\n\t}\n\n\tquery = query.trim().replace(/^[?#&]/, '');\n\n\tif (!query) {\n\t\treturn returnValue;\n\t}\n\n\tfor (const parameter of query.split('&')) {\n\t\tif (parameter === '') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst parameter_ = options.decode ? parameter.replace(/\\+/g, ' ') : parameter;\n\n\t\tlet [key, value] = splitOnFirst(parameter_, '=');\n\n\t\tif (key === undefined) {\n\t\t\tkey = parameter_;\n\t\t}\n\n\t\t// Missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tvalue = value === undefined ? null : (['comma', 'separator', 'bracket-separator'].includes(options.arrayFormat) ? value : decode(value, options));\n\t\tformatter(decode(key, options), value, returnValue);\n\t}\n\n\tfor (const [key, value] of Object.entries(returnValue)) {\n\t\tif (typeof value === 'object' && value !== null) {\n\t\t\tfor (const [key2, value2] of Object.entries(value)) {\n\t\t\t\tvalue[key2] = parseValue(value2, options);\n\t\t\t}\n\t\t} else {\n\t\t\treturnValue[key] = parseValue(value, options);\n\t\t}\n\t}\n\n\tif (options.sort === false) {\n\t\treturn returnValue;\n\t}\n\n\t// TODO: Remove the use of `reduce`.\n\t// eslint-disable-next-line unicorn/no-array-reduce\n\treturn (options.sort === true ? Object.keys(returnValue).sort() : Object.keys(returnValue).sort(options.sort)).reduce((result, key) => {\n\t\tconst value = returnValue[key];\n\t\tif (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(value);\n\t\t} else {\n\t\t\tresult[key] = value;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nexport function stringify(object, options) {\n\tif (!object) {\n\t\treturn '';\n\t}\n\n\toptions = {encode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',', ...options};\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst shouldFilter = key => (\n\t\t(options.skipNull && isNullOrUndefined(object[key]))\n\t\t|| (options.skipEmptyString && object[key] === '')\n\t);\n\n\tconst formatter = encoderForArrayFormat(options);\n\n\tconst objectCopy = {};\n\n\tfor (const [key, value] of Object.entries(object)) {\n\t\tif (!shouldFilter(key)) {\n\t\t\tobjectCopy[key] = value;\n\t\t}\n\t}\n\n\tconst keys = Object.keys(objectCopy);\n\n\tif (options.sort !== false) {\n\t\tkeys.sort(options.sort);\n\t}\n\n\treturn keys.map(key => {\n\t\tconst value = object[key];\n\n\t\tif (value === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (value === null) {\n\t\t\treturn encode(key, options);\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\tif (value.length === 0 && options.arrayFormat === 'bracket-separator') {\n\t\t\t\treturn encode(key, options) + '[]';\n\t\t\t}\n\n\t\t\treturn value\n\t\t\t\t.reduce(formatter(key), [])\n\t\t\t\t.join('&');\n\t\t}\n\n\t\treturn encode(key, options) + '=' + encode(value, options);\n\t}).filter(x => x.length > 0).join('&');\n}\n\nexport function parseUrl(url, options) {\n\toptions = {\n\t\tdecode: true,\n\t\t...options,\n\t};\n\n\tlet [url_, hash] = splitOnFirst(url, '#');\n\n\tif (url_ === undefined) {\n\t\turl_ = url;\n\t}\n\n\treturn {\n\t\turl: url_?.split('?')?.[0] ?? '',\n\t\tquery: parse(extract(url), options),\n\t\t...(options && options.parseFragmentIdentifier && hash ? {fragmentIdentifier: decode(hash, options)} : {}),\n\t};\n}\n\nexport function stringifyUrl(object, options) {\n\toptions = {\n\t\tencode: true,\n\t\tstrict: true,\n\t\t[encodeFragmentIdentifier]: true,\n\t\t...options,\n\t};\n\n\tconst url = removeHash(object.url).split('?')[0] || '';\n\tconst queryFromUrl = extract(object.url);\n\n\tconst query = {\n\t\t...parse(queryFromUrl, {sort: false}),\n\t\t...object.query,\n\t};\n\n\tlet queryString = stringify(query, options);\n\tif (queryString) {\n\t\tqueryString = `?${queryString}`;\n\t}\n\n\tlet hash = getHash(object.url);\n\tif (object.fragmentIdentifier) {\n\t\tconst urlObjectForFragmentEncode = new URL(url);\n\t\turlObjectForFragmentEncode.hash = object.fragmentIdentifier;\n\t\thash = options[encodeFragmentIdentifier] ? urlObjectForFragmentEncode.hash : `#${object.fragmentIdentifier}`;\n\t}\n\n\treturn `${url}${queryString}${hash}`;\n}\n\nexport function pick(input, filter, options) {\n\toptions = {\n\t\tparseFragmentIdentifier: true,\n\t\t[encodeFragmentIdentifier]: false,\n\t\t...options,\n\t};\n\n\tconst {url, query, fragmentIdentifier} = parseUrl(input, options);\n\n\treturn stringifyUrl({\n\t\turl,\n\t\tquery: includeKeys(query, filter),\n\t\tfragmentIdentifier,\n\t}, options);\n}\n\nexport function exclude(input, filter, options) {\n\tconst exclusionFilter = Array.isArray(filter) ? key => !filter.includes(key) : (key, value) => !filter(key, value);\n\n\treturn pick(input, exclusionFilter, options);\n}\n","import * as queryString from './base.js';\n\nexport default queryString;\n"],"names":["CategoryList","page","selectedCategory","categoryList","React","CategoryListWrapper","Object","entries","map","_ref2","name","count","CategoryItem","to","active","key","styled","_ref3","props","Link","theme","bgColor","selectBoxColor","textColor","tabColor","useInfiniteScroll","posts","containerRef","useRef","observer","setCount","useState","postListByCategory","useMemo","filter","_ref","node","frontmatter","categories","includes","useEffect","current","IntersectionObserver","isIntersecting","value","unobserve","target","length","children","observe","postList","slice","Home","location","search","data","site","siteMetadata","title","description","siteUrl","Layout","url","PageTitle","PageDescript","Section","displayName","componentId","subTextColor","ProjectItem","subTitle","startDate","endDate","link","thumbnail","childImageSharp","gatsbyImageData","ProjectItemWrapper","CardLink","Card","TitleWrapper","Title","SubTitle","DateWrapper","Category","category","i","ImageWrapper","Img","image","alt","GatsbyImage","ownColorHover","boxColor","ProjectList","ProjectListWrapper","ref","id","fields","slug","Project","href","allMarkdownRemark","edges","parsed","queryString","pageEdges","edge","reduce","list","forEach","undefined","All","token","singleMatcher","RegExp","multiMatcher","decodeComponents","components","split","decodeURIComponent","join","left","right","Array","prototype","concat","call","decode","input","tokens","match","decodeUriComponent","encodedURI","TypeError","replaceMap","exec","result","keys","replace","customDecodeURIComponent","splitOnFirst","string","separator","separatorIndex","indexOf","includeKeys","object","predicate","isArray","descriptor","getOwnPropertyDescriptor","enumerable","defineProperty","Reflect","ownKeys","encodeFragmentIdentifier","Symbol","validateArrayFormatSeparator","encode","options","strict","encodeURIComponent","x","charCodeAt","toString","toUpperCase","keysSorter","sort","a","b","Number","removeHash","hashStart","parseValue","parseNumbers","isNaN","trim","parseBooleans","toLowerCase","extract","queryStart","parse","query","arrayFormat","arrayFormatSeparator","formatter","accumulator","isEncodedArray","newValue","item","test","arrayValue","flat","parserForArrayFormat","returnValue","create","parameter","parameter_","key2","value2","Boolean","stringify","shouldFilter","skipNull","skipEmptyString","index","keyValueSep","encoderForArrayFormat","objectCopy","parseUrl","url_","hash","parseFragmentIdentifier","fragmentIdentifier","stringifyUrl","getHash","urlObjectForFragmentEncode","URL","pick","exclude"],"sourceRoot":""}