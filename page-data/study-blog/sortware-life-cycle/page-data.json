{"componentChunkName":"component---src-templates-post-template-tsx","path":"/study-blog/sortware-life-cycle/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"html":"<p>소프트웨어 개발 방법론의 바탕이 되는 것</p>\n<p>소프트웨어를 개발하기 위해 정의, 운용, 유지보수 등의 과정을 각 단계별로 나눈 것</p>\n<h1>소프트웨어 생명주기 모형 = 소프트웨어 프로세스 모형 = 소프트웨어 공학 패러다임</h1>\n<h2>폭포수 모형(Waterfall Model)</h2>\n<p>이전 단계로 돌아갈 수 없다는 전제</p>\n<ul>\n<li>\n<p>특징</p>\n<ul>\n<li>\n<p>고전적 생명 주기 모형 - 가장 오래되고 폭넓게 사용 (전통적)</p>\n</li>\n<li>\n<p>선형 순차적 모형 - 한 단계가 끝나야만 다음 단계로 넘어갈 수 있음</p>\n</li>\n</ul>\n</li>\n<li>\n<p>장점</p>\n<ul>\n<li>적용한 경험 및 성공 사례 ↑</li>\n</ul>\n</li>\n<li>\n<p>단점</p>\n<ul>\n<li>개발이 완료된 시점에서 오류 발견</li>\n</ul>\n</li>\n</ul>\n<h2>프로토타입 모형(Prototype Model)</h2>\n<p>사용자의 요구사항을 정확히 파악하기 위해 프로토타입을 만들어 최종 결과물을 예측</p>\n<ul>\n<li>\n<p>특징</p>\n<ul>\n<li>원형 모형</li>\n</ul>\n</li>\n<li>\n<p>장점</p>\n<ul>\n<li>폭포수 모형 단점 보완</li>\n</ul>\n</li>\n</ul>\n<h2>나선형 모형(Spiral Model)</h2>\n<p>보헴(Boehm)이 제안</p>\n<p>폭포수 모형 장점 + 프로토타입 모형 장점 + 위험 분석 기능</p>\n<ul>\n<li>특징\n<ul>\n<li>점진적 모형 - 여러 번의 개발 과정을 거쳐 완벽한 최종 소프트웨어를 개발</li>\n<li>위험을 관리하고 최소화하는 것이 목적</li>\n</ul>\n</li>\n<li>장점\n<ul>\n<li>누락/추가된 요구사항 첨가 가능</li>\n<li>정밀</li>\n<li>유지보수 필요 X</li>\n</ul>\n</li>\n</ul>\n<h2>애자일 모형(Agile Model)</h2>\n<p>고객의 요구사항 변화에 유연하게 대응할 수 있도록 일정한 주기를 반복하면서 개발과정 진행</p>\n<ul>\n<li>특징\n<ul>\n<li>어느 특정 개발 방법론이 아닌, 좋은 것을 빠르고 낭비 없게 만들기 위해 고객과의 소통에 초점을 맞춘 방법론을 통칭</li>\n</ul>\n</li>\n<li>애자일 모형 기반의 소프트웨어 개발 모형\n<ul>\n<li>스크럼(Scrum)</li>\n<li>XP(eXtreme Programming)</li>\n<li>칸반(Kanban)</li>\n<li>Lean</li>\n<li>크리스탈(Crystal)</li>\n<li>ASD(Adaptive Software Development)</li>\n<li>기능 중심 개발(FDD; Feature Driven Development)</li>\n<li>DSDM(Dynamic System Development Method)</li>\n<li>DAD(Disciplined Agile Delivery)</li>\n</ul>\n</li>\n</ul>","frontmatter":{"page":"study-blog","categories":["Software-Design"],"date":"2023.02.13","title":"소프트웨어 생명 주기(Software Life Cycle)","subTitle":null}}}]}},"pageContext":{"slug":"/study-blog/sortware-life-cycle/"}},"staticQueryHashes":[],"slicesMap":{}}