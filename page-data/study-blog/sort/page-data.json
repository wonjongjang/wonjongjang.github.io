{"componentChunkName":"component---src-templates-post-template-tsx","path":"/study-blog/sort/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"html":"<p>2개 이상의 자료를 특정 기준에 의해 오름차순/내림차순으로 재배열하는 것</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">알고리즘</th>\n<th align=\"center\">평균 수행시간</th>\n<th align=\"center\">최악 수행시간</th>\n<th align=\"center\">알고리즘 기법</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">버블 정렬</td>\n<td align=\"center\">$O(n^2)$</td>\n<td align=\"center\">$O(n^2)$</td>\n<td align=\"center\">비교와 교환</td>\n</tr>\n<tr>\n<td align=\"center\">카운팅 정렬</td>\n<td align=\"center\">$O(n + k)$</td>\n<td align=\"center\">$O(n + k)$</td>\n<td align=\"center\">비교환 방식</td>\n</tr>\n<tr>\n<td align=\"center\">선택 정렬</td>\n<td align=\"center\">$O(n^2)$</td>\n<td align=\"center\">$O(n^2)$</td>\n<td align=\"center\">비교와 교환</td>\n</tr>\n<tr>\n<td align=\"center\">퀵 정렬</td>\n<td align=\"center\">$O(n log n)$</td>\n<td align=\"center\">$O(n^2)$</td>\n<td align=\"center\">분할 정복</td>\n</tr>\n<tr>\n<td align=\"center\">삽입 정렬</td>\n<td align=\"center\">$O(n^2)$</td>\n<td align=\"center\">$O(n^2)$</td>\n<td align=\"center\">비교와 교환</td>\n</tr>\n<tr>\n<td align=\"center\">쉘 정렬</td>\n<td align=\"center\">$O(n^{1.5})$</td>\n<td align=\"center\">$O(n^2)$</td>\n<td align=\"center\">비교와 교환</td>\n</tr>\n<tr>\n<td align=\"center\">힙 정렬</td>\n<td align=\"center\">$O(n log_2 n)$</td>\n<td align=\"center\">$O(n log_2 n)$</td>\n<td align=\"center\">전이진 트리</td>\n</tr>\n<tr>\n<td align=\"center\">병합 정렬</td>\n<td align=\"center\">$O(n log_2 n)$</td>\n<td align=\"center\">$O(n log_2 n)$</td>\n<td align=\"center\">분할 정복</td>\n</tr>\n<tr>\n<td align=\"center\">기수 정렬</td>\n<td align=\"center\">$O(dn)$</td>\n<td align=\"center\">$O(dn)$</td>\n<td align=\"center\">Queue</td>\n</tr>\n</tbody>\n</table>\n<h1>버블 정렬(Bubble Sort)</h1>\n<p>인접한 두 개의 요소를 비교하여 위치를 서로 교환하는 방식</p>\n<ul>\n<li>특징\n<ul>\n<li>첫 번째 원소부터 인접한 원소끼리 계속 자리를 교환하면서 맨 마지막 자리까지 이동</li>\n<li>한 단계가 끝나면 가장 큰 원소/가장 작은 원소가 마지막 자리로 정렬됨</li>\n<li>교환하며 자리를 이동하는 모습이 물 위에 올라오는 거품모양 같아서 버블 정렬이라고 함</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\t<span class=\"token comment\"># 범위의 끝 위치</span>\n    <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> arr<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> arr<span class=\"token punctuation\">[</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n            arr<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> arr<span class=\"token punctuation\">[</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> arr<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span></code></pre></div>\n<h1>카운팅 정렬(Counting Sort)</h1>\n<p>각 요소가 몇 개씩 있는지 세는 방식</p>\n<ul>\n<li>\n<p>특징</p>\n<ul>\n<li>\n<p>정수/정수로 표현할 수 있는 자료에 대해서만 적용 가능 (각 항목의 발생 회수를 기록하기 위해, 정수 항목으로 인덱스되는 카운트의 리스트를 사용하기 때문)</p>\n</li>\n<li>\n<p>카운트를 위한 충분한 공간을 할당하려면 집합 내의 가장 큰 정수를 알아야 함</p>\n</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span>\t\t\t\t<span class=\"token comment\"># 리스트 요소 (0 ~ k)</span>\nans <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span>\t<span class=\"token comment\"># 정렬된 리스트</span>\ncount <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>k<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\t\t<span class=\"token comment\"># 카운트 리스트</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>ans<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    count<span class=\"token punctuation\">[</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n\n<span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    count<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> count<span class=\"token punctuation\">[</span>j<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">for</span> k <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>ans<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    ans<span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">[</span>arr<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span>\n    count<span class=\"token punctuation\">[</span>arr<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> <span class=\"token number\">1</span></code></pre></div>\n<h1>선택 정렬(Selection Sort)</h1>\n<p>요소 중 최소값을 찾아 앞에서 부터 놓는 방식</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token builtin\">min</span> <span class=\"token operator\">=</span> i\n    <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> arr<span class=\"token punctuation\">[</span><span class=\"token builtin\">min</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> arr<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n            <span class=\"token builtin\">min</span> <span class=\"token operator\">=</span> j\n    arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> arr<span class=\"token punctuation\">[</span><span class=\"token builtin\">min</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span><span class=\"token builtin\">min</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># [셀렉션 알고리즘 - k번째로 작은 원소]</span>\narr<span class=\"token punctuation\">[</span>k<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></code></pre></div>\n<h1>퀵 정렬(Quick Sort)</h1>\n<p>키를 기준으로 작은 값은 왼쪽, 큰 값은 오른쪽으로 분해시키는 방식</p>\n<ul>\n<li>\n<p>과정</p>\n<ul>\n<li>\n<p>분할(Divide) : 피봇(Pivot)을 중심으로 2개의 부분집합으로 나눔</p>\n</li>\n<li>\n<p>정복(Conquer) : 피봇(Pivot)을 기준으로 작은 값은 왼쪽, 큰 값은 오른쪽으로 정렬</p>\n</li>\n</ul>\n</li>\n</ul>\n<h1>삽입 정렬(Insertion Sort)</h1>\n<p>n번째 요소를 n-1번째 요소와 비교하여 알맞은 순서에 삽입한 후 나머지를 뒤로 이동시키는 방식</p>\n<h1>쉘 정렬(Shell Sort)</h1>\n<p>삽입 정렬을 확장한 개념</p>\n<p>\b매개변수(h) 만큼 떨어진 곳을 비교하여 삽입 정렬 하는 방식</p>\n<p>보통 $h = \\sqrt[3]{n}$</p>\n<h1>힙 정렬(Heap Sort)</h1>\n<p>전이진 트리(Complete Binary Tree)를 이용한 방식</p>\n<h1>병합 정렬(Merge Sort) = 2-Way 합병 정렬</h1>\n<p>두 개를 하나로 합병하는 방식</p>\n<h1>기수 정렬(Radix Sort) = Bucket Sort</h1>\n<p>Queue를 활용하여 자릿수 별로 정렬하는 방식</p>","frontmatter":{"page":"study-blog","categories":["Software-Development"],"date":"2023.04.12","title":"정렬(Sort)","subTitle":null}}}]}},"pageContext":{"slug":"/study-blog/sort/"}},"staticQueryHashes":[],"slicesMap":{}}