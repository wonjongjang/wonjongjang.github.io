{"componentChunkName":"component---src-templates-post-template-tsx","path":"/study-blog/search/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"html":"<h1>검색(Search)</h1>\n<p>저장되어 있는 자료 중에서 원하는 항목을 찾는 작업</p>\n<h2>순차 검색(Sequential Search)</h2>\n<p>일렬로 되어 있는 자료를 순서대로 검색하는 방법</p>\n<p>$O(n)$</p>\n<ul>\n<li>\n<p>특징</p>\n<ul>\n<li>리스트/연결 리스트 등 순차구조로 구현된 자료구조에서 유용</li>\n</ul>\n</li>\n<li>\n<p>장점</p>\n<ul>\n<li>구현이 쉬움</li>\n</ul>\n</li>\n<li>\n<p>단점</p>\n<ul>\n<li>검색 대상이 많은 경우 수행시간 ↑ → 비효율적</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span>\nkey <span class=\"token operator\">=</span> ★\n\n<span class=\"token comment\"># [정렬되지 않은 경우]</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> key<span class=\"token punctuation\">:</span>\t<span class=\"token comment\"># 발견</span>\n        <span class=\"token keyword\">break</span>\n        \n<span class=\"token comment\"># [정렬된 경우]    </span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> key<span class=\"token punctuation\">:</span>\t<span class=\"token comment\"># 검색 성공</span>\n        <span class=\"token keyword\">break</span>\n    <span class=\"token keyword\">if</span> arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> key<span class=\"token punctuation\">:</span>\t<span class=\"token comment\"># 검색 실패</span>\n        <span class=\"token keyword\">break</span></code></pre></div>\n<h2>이분 검색(Binary Search) = 이진 검색</h2>\n<p>자료의 가운데 항목의 키 값과 비교하여 다음 검색의 위치를 결정하고 검색을 계속하는 방법</p>\n<p>$O(log n)$</p>\n<ul>\n<li>\n<p>특징</p>\n<ul>\n<li>\n<p>검색 범위의 시작점과 종료점을 이용하여 검색을 반복 수행</p>\n</li>\n<li>\n<p>항상 정렬된 상태의 자료 필요 (자료 삽입/삭제 시 정렬 상태로 유지하는 추가 작업 필요)</p>\n</li>\n</ul>\n</li>\n<li>\n<p>장점</p>\n<ul>\n<li>효율적</li>\n<li>빠름</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span>\nkey <span class=\"token operator\">=</span> ★\n\n<span class=\"token comment\"># [while]</span>\nleft <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\nright <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">while</span> left <span class=\"token operator\">&lt;=</span> right<span class=\"token punctuation\">:</span>\n    mid <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>left <span class=\"token operator\">+</span> right<span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> <span class=\"token number\">2</span>\n    <span class=\"token keyword\">if</span> mid <span class=\"token operator\">==</span> key<span class=\"token punctuation\">:</span>\t<span class=\"token comment\"># 검색 성공</span>\n        <span class=\"token keyword\">break</span>\n    <span class=\"token keyword\">elif</span> mid <span class=\"token operator\">></span> key<span class=\"token punctuation\">:</span>\n        right <span class=\"token operator\">=</span> mid <span class=\"token operator\">-</span> <span class=\"token number\">1</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        left <span class=\"token operator\">=</span> mid <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n        \n<span class=\"token comment\"># [재귀]</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">recur</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">,</span> l<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> l <span class=\"token operator\">></span> r<span class=\"token punctuation\">:</span>\t\t<span class=\"token comment\"># 검색 실패</span>\n        <span class=\"token keyword\">return</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        mid <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>l <span class=\"token operator\">+</span> r<span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> <span class=\"token number\">2</span>\n        <span class=\"token keyword\">if</span> arr<span class=\"token punctuation\">[</span>mid<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> k<span class=\"token punctuation\">:</span>\t<span class=\"token comment\"># 검색 성공</span>\n            <span class=\"token keyword\">return</span>\n        <span class=\"token keyword\">elif</span> arr<span class=\"token punctuation\">[</span>mid<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> k<span class=\"token punctuation\">:</span>\n            recur<span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">,</span> l<span class=\"token punctuation\">,</span> mid<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            recur<span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">,</span> mid<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">)</span>\n\nleft <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\nright <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span>\n\nrecur<span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">,</span> left<span class=\"token punctuation\">,</span> right<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span></code></pre></div>\n<h2>해싱(Hashing)</h2>\n<p>해시 테이블(Hash Table)이라는 기억공간을 할당하고, 해시 함수(Hash Function)를 이용하여 레코드 키에 대한 해시 테이블 내의 홈 주소를 계산한 후 주어진 레코드를 해당 기억장소에 저장/검색 작업을 수행하는 방식</p>","frontmatter":{"page":"study-blog","categories":["Software-Development"],"date":"2023.04.13","title":"검색(Search)","subTitle":null}}}]}},"pageContext":{"slug":"/study-blog/search/"}},"staticQueryHashes":[],"slicesMap":{}}