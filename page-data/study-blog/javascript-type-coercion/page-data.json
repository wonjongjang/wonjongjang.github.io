{"componentChunkName":"component---src-templates-post-template-tsx","path":"/study-blog/javascript-type-coercion/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"html":"<table>\n<thead>\n<tr>\n<th>구분</th>\n<th>설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>명시적 타입 변환(Explicit coercion) / 타입 캐스팅(Type casting)</td>\n<td>개발자에 의해 의도적으로 값의 타입을 변환하는 것<br/>개발자의 의지가 코드에 드러남</td>\n</tr>\n<tr>\n<td>암묵적 타입 변환(Implicit coercion) / 타입 강제 변환(Type coercion)</td>\n<td>자바스크립트 엔진에 의해 암묵적으로 타입이 자동 변환되는 것<br/>개발자의 의지가 코드에 명백히 나타나지 않음</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<ul>\n<li>\n<p>암묵적 타입 변환은 변수 값을 재할당해서 변경하는 것 아니라, 자바스크립트 엔진이 표현식을 에러없이 평가하기 위해 기존 값을 바탕으로 새로운 타입의 값을 만들어 단 한번 사용하고 버림 (가비지 컬렉터에 의해 메모리에서 제거)</p>\n</li>\n<li>\n<p>예측 가능하게 하기 위해 명시적 타입 변환 만을 사용하는 것은 옳지 않음 (암묵적 타입 변환이 가독성이 더 좋을 수 있음)</p>\n</li>\n</ul>\n</blockquote>\n<h1>참고</h1>\n<ul>\n<li><a href=\"https://poiemaweb.com/\" target=\"_blank\" rel=\"nofollow\">PoiemaWeb</a></li>\n</ul>","frontmatter":{"page":"study-blog","categories":["JavaScript"],"date":"2022.08.05","title":"타입 변환(Type coercion)","subTitle":null}}}]}},"pageContext":{"slug":"/study-blog/javascript-type-coercion/"}},"staticQueryHashes":[],"slicesMap":{}}