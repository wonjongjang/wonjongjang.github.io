{"version":3,"file":"component---src-templates-post-template-tsx-ddc1609f274fd58d3fd2.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/PostHead/index.tsx","webpack://gatsby-starter-default/./src/styles/md.ts","webpack://gatsby-starter-default/./src/components/PostContent.tsx/index.tsx","webpack://gatsby-starter-default/./src/components/Comment/index.tsx","webpack://gatsby-starter-default/./src/templates/post_template.tsx"],"sourcesContent":["// 게시글 상단\nimport React from 'react'\n\nimport styled from 'styled-components'\n\ninterface PostHeadProps {\n  title: string\n  date: string\n}\n\nexport default function PostHead({ title, date }: PostHeadProps) {\n  return (\n    <PostHeadContainer>\n      <DateWrapper>\n        <Date>{date}</Date>\n      </DateWrapper>\n      <TitleWrapper>{title}</TitleWrapper>\n    </PostHeadContainer>\n  )\n}\n\nconst TitleWrapper = styled.p`\n  margin-top: 12px;\n  font-weight: 700;\n  font-size: 32px;\n  line-height: 1.38;\n\n  @media screen and (min-width: 767px) {\n    margin-top: 24px;\n    font-size: 42px;\n    line-height: 1.29;\n    letter-spacing: -0.8px;\n  }\n\n  @media screen and (min-width: 1439px) {\n    font-size: 46px;\n    line-height: 1.3;\n    letter-spacing: -1px;\n  }\n`\n\nconst Date = styled.span`\n  font-size: 13px;\n  color: ${props => props.theme.postDateColor};\n  letter-spacing: -0.2px;\n\n  @media screen and (min-width: 767px) {\n    font-size: 18px;\n    letter-spacing: -0.5px;\n  }\n`\n\nconst DateWrapper = styled.div`\n  line-height: 20px;\n`\n\nconst PostHeadContainer = styled.div`\n  max-width: 364px;\n  margin: 0 auto;\n  padding: 0 24px;\n  text-align: center;\n\n  @media screen and (min-width: 767px) {\n    max-width: 630px;\n    padding: 0;\n  }\n\n  @media screen and (min-width: 1439px) {\n    max-width: 816px;\n    padding: 0;\n  }\n`\n","// 마크다운 스타일\nimport styled from 'styled-components'\n\nexport const Content = styled.div`\n  max-width: 364px;\n  margin: 84px auto 0;\n  padding: 0 24px;\n\n  @media screen and (min-width: 767px) {\n    max-width: 630px;\n    margin-top: 120px;\n  }\n\n  @media screen and (min-width: 1439px) {\n    max-width: 816px;\n  }\n  color: ${props => props.theme.postContentColor};\n\n  // Markdown Style\n  line-height: 1.8;\n  font-size: 16px;\n  font-weight: 400;\n\n  // Apply Padding Attribute to All Elements\n  p {\n    padding: 3px 0;\n  }\n\n  // Adjust Heading Element Style\n  h1,\n  h2,\n  h3 {\n    font-weight: 800;\n    margin-bottom: 30px;\n  }\n\n  * + h1,\n  * + h2,\n  * + h3 {\n    margin-top: 80px;\n  }\n\n  hr + h1,\n  hr + h2,\n  hr + h3 {\n    margin-top: 0;\n  }\n\n  h1 {\n    font-size: 30px;\n  }\n\n  h2 {\n    font-size: 25px;\n  }\n\n  h3 {\n    font-size: 20px;\n  }\n\n  // Adjust Quotation Element Style\n  blockquote {\n    margin: 30px 0;\n    padding: 5px 15px;\n    border-left: 2px solid #000000;\n    font-weight: 800;\n  }\n\n  // Adjust List Element Style\n  ol,\n  ul {\n    margin-left: 20px;\n    padding: 30px 0;\n  }\n\n  // Adjust Horizontal Rule style\n  hr {\n    border: 1px solid #000000;\n    margin: 100px 0;\n  }\n\n  // Adjust Link Element Style\n  a {\n    color: #4263eb;\n    text-decoration: underline;\n  }\n\n  // Adjust Code Style\n  pre[class*='language-'] {\n    margin: 30px 0;\n    padding: 15px;\n    font-size: 15px;\n\n    ::-webkit-scrollbar-thumb {\n      background: rgba(255, 255, 255, 0.5);\n      border-radius: 3px;\n    }\n  }\n\n  code[class*='language-'],\n  pre[class*='language-'] {\n    tab-size: 2;\n  }\n`\n","// 게시글 본문\n// 게시글 상단\nimport React from 'react'\nimport { Link } from 'gatsby'\n\nimport styled from 'styled-components'\nimport { Content } from 'styles/md'\n\ninterface PostContentProps {\n  html: string\n  categories: string[]\n}\n\nexport default function PostContent({ html, categories }: PostContentProps) {\n  return (\n    <>\n      <ContentContainer>\n        <Content dangerouslySetInnerHTML={{ __html: html }} />\n      </ContentContainer>\n      <CategoryContainer>\n        <CategoryList>\n          {categories.map((categorie, idx) => (\n            <CategoryItem key={idx}>{categorie}</CategoryItem>\n          ))}\n        </CategoryList>\n      </CategoryContainer>\n      <Prev to={`/tech-blog`}>목록 보기</Prev>\n    </>\n  )\n}\n\nconst Prev = styled(Link)`\n  display: block;\n  width: 150px;\n  margin: 120px auto 30px;\n  padding: 10px 9px;\n  border-radius: 30px;\n  background: ${props => props.theme.tabColor};\n  font-size: 16px;\n  font-weight: 700;\n  line-height: 26px;\n  letter-spacing: -0.5px;\n  color: ${props => props.theme.textColor};\n  text-align: center;\n  cursor: pointer;\n  &:hover {\n    color: ${props => props.theme.bgColor};\n    background: ${props => props.theme.selectBoxColor};\n  }\n\n  @media screen and (min-width: 767px) {\n    width: 180px;\n    padding: 13px 24px;\n    font-size: 18px;\n    line-height: 28px;\n  }\n`\n\nconst CategoryItem = styled.div`\n  display: inline-block;\n  overflow: hidden;\n  max-width: 100%;\n  height: 34px;\n  margin-right: 6px;\n  padding: 0 15px;\n  border-radius: 34px;\n  font-size: 13px;\n  line-height: 34px;\n  color: ${props => props.theme.textColor};\n  background: ${props => props.theme.tabColor};\n  letter-spacing: -0.5px;\n  hite-space: nowrap;\n  text-overflow: ellipsis;\n`\n\nconst CategoryList = styled.div`\n  text-align: center;\n`\n\nconst CategoryContainer = styled.div`\n  max-width: 364px;\n  margin: 110px auto 0;\n  padding: 0 24px;\n\n  @media screen and (min-width: 767px) {\n    max-width: 630px;\n  }\n\n  @media screen and (min-width: 1439px) {\n    max-width: 816px;\n  }\n`\n\nconst ContentContainer = styled.div`\n  max-width: 364px;\n  margin: 84px auto 0;\n  padding: 0 24px;\n\n  @media screen and (min-width: 767px) {\n    max-width: 630px;\n    margin-top: 120px;\n  }\n\n  @media screen and (min-width: 1439px) {\n    max-width: 816px;\n  }\n`\n","import React, { createRef, useEffect } from 'react'\n\nconst src = 'https://utteranc.es/client.js'\nconst repo = 'wonjongjang/wonjongjang.github.io' // 자신 계정의 레포지토리로 설정\n\ntype UtterancesAttributesType = {\n  src: string\n  repo: string\n  'issue-term': string\n  label: string\n  theme: string\n  crossorigin: string\n  async: string\n}\n\nexport default function CommentWidget() {\n  const element = createRef<HTMLDivElement>()\n\n  useEffect(() => {\n    if (element.current === null) return\n\n    const utterances: HTMLScriptElement = document.createElement('script')\n\n    const attributes: UtterancesAttributesType = {\n      src,\n      repo,\n      'issue-term': 'pathname',\n      label: 'Comment',\n      theme: `github-light`,\n      crossorigin: 'anonymous',\n      async: 'true',\n    }\n\n    Object.entries(attributes).forEach(([key, value]) => {\n      utterances.setAttribute(key, value)\n    })\n\n    element.current.appendChild(utterances)\n  }, [])\n\n  return <div ref={element} />\n}\n","import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Layout from 'components/Layout'\nimport PostHead from 'components/PostHead'\nimport PostContent from 'components/PostContent.tsx'\n\nimport { PostListItemType } from 'components/PostList'\nimport CommentWidget from 'components/Comment'\n\ninterface PostTemplateProps {\n  location: {\n    href: string\n  }\n  data: {\n    allMarkdownRemark: {\n      edges: PostListItemType[]\n    }\n  }\n}\n\nexport default function PostTemplate({\n  location: { href },\n  data: {\n    allMarkdownRemark: { edges },\n  },\n}: PostTemplateProps) {\n  const {\n    node: {\n      frontmatter: { title, date, categories, summary },\n      html,\n    },\n  } = edges[0]\n\n  return (\n    <Layout title={title} description={summary} url={href}>\n      <PostHead title={title} date={date} />\n      <PostContent html={html} categories={categories} />\n      <CommentWidget />\n    </Layout>\n  )\n}\n\nexport const queryMarkdownDataBySlug = graphql`\n  query queryMarkdownDataBySlug($slug: String) {\n    allMarkdownRemark(filter: { fields: { slug: { eq: $slug } } }) {\n      edges {\n        node {\n          html\n          frontmatter {\n            categories\n            date(formatString: \"YYYY.MM.DD\")\n            title\n            summary\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["PostHead","title","date","React","PostHeadContainer","DateWrapper","Date","TitleWrapper","styled","props","theme","postDateColor","Content","postContentColor","PostContent","html","categories","ContentContainer","dangerouslySetInnerHTML","__html","CategoryContainer","CategoryList","map","categorie","idx","CategoryItem","key","Prev","to","Link","tabColor","textColor","bgColor","selectBoxColor","CommentWidget","element","createRef","useEffect","current","utterances","document","createElement","attributes","src","repo","label","crossorigin","async","Object","entries","forEach","_ref","value","setAttribute","appendChild","ref","PostTemplate","location","href","data","allMarkdownRemark","edges","node","frontmatter","summary","Layout","description","url"],"sourceRoot":""}