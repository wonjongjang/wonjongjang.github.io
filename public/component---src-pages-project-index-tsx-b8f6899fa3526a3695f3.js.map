{"version":3,"file":"component---src-pages-project-index-tsx-b8f6899fa3526a3695f3.js","mappings":"gRAqBe,SAASA,EAAY,GAWlB,IAXkB,MAClCC,EAAK,SACLC,EAAQ,WACRC,EAAU,UACVC,EAAS,QACTC,EAAO,KACPC,EAAI,KACJC,EACAC,WACEC,iBAAiB,gBAAEC,KAEP,EACd,OACEC,EAAAA,cAACC,EAAW,KACVD,EAAAA,cAACE,EAAAA,GAAI,CAACC,GAAIP,GACRI,EAAAA,cAACI,EAAM,KACLJ,EAAAA,cAACK,EAAc,KACbL,EAAAA,cAACM,EAAO,KAAEhB,GACVU,EAAAA,cAACO,EAAU,KAAEhB,IAEfS,EAAAA,cAACQ,EAAa,KACXf,EAAU,MAAIC,GAEjBM,EAAAA,cAACS,EAAc,KACZjB,aAAU,EAAVA,EAAYkB,KAAI,CAACC,EAAUC,IAC1BZ,EAAAA,cAACa,EAAc,CAACC,IAAKF,GAAID,MAG7BX,EAAAA,cAACe,EAAc,KACbf,EAAAA,cAACgB,EAAAA,EAAW,CACVC,MAAOlB,EACPmB,IAAI,GACJC,MAAO,CAAEC,OAAQ,SACjBC,UAAU,YAOxB,CAEA,MAAMN,EAAiBO,EAAAA,QAAAA,IAAAA,WAAU,CAAAC,YAAAA,8BAAAC,YAAAA,eAAVF,CAAU,wJAW3Bd,EAAgBc,EAAAA,QAAAA,IAAAA,WAAU,CAAAC,YAAAA,6BAAAC,YAAAA,eAAVF,CAAU,wIAMrBG,GAASA,EAAMC,MAAMC,OAAOC,eAE5BH,GAASA,EAAMC,MAAMG,OAAOC,SAMjCvB,EAAae,EAAAA,QAAAA,IAAAA,WAAU,CAAAC,YAAAA,0BAAAC,YAAAA,eAAVF,CAAU,mNAQlBG,GAASA,EAAMC,MAAMG,OAAOC,SAI5BL,GAASA,EAAMC,MAAMG,OAAOE,SAMjCzB,EAAUgB,EAAAA,QAAAA,IAAAA,WAAU,CAAAC,YAAAA,uBAAAC,YAAAA,eAAVF,CAAU,+IAKfG,GAASA,EAAMC,MAAMG,OAAOC,SAI5BL,GAASA,EAAMC,MAAMG,OAAOE,SAMjC1B,EAAiBiB,EAAAA,QAAAA,IAAAA,WAAU,CAAAC,YAAAA,8BAAAC,YAAAA,eAAVF,CAAU,kEAGtBG,GAASA,EAAMC,MAAMG,OAAOC,SAG5BL,GAASA,EAAMC,MAAMG,OAAOE,SAKjClB,EAAiBS,EAAAA,QAAAA,GAAAA,WAAS,CAAAC,YAAAA,8BAAAC,YAAAA,eAATF,CAAS,6NAOrBG,GAASA,EAAMC,MAAMC,OAAOK,YACvBP,GAASA,EAAMC,MAAMC,OAAOM,cAIjCR,GAASA,EAAMC,MAAMG,OAAOC,SAG5BL,GAASA,EAAMC,MAAMG,OAAOK,SAKjCzB,EAAiBa,EAAAA,QAAAA,GAAAA,WAAS,CAAAC,YAAAA,8BAAAC,YAAAA,eAATF,CAAS,yFAS1BlB,EAASkB,EAAAA,QAAAA,IAAAA,WAAU,CAAAC,YAAAA,sBAAAC,YAAAA,eAAVF,CAAU,2OAUHG,GAASA,EAAMC,MAAMC,OAAOQ,WAG5ClC,EAAcqB,EAAAA,QAAAA,GAAAA,WAAS,CAAAC,YAAAA,2BAAAC,YAAAA,eAATF,CAAS,4IAMlBG,GAASA,EAAMC,MAAMG,OAAOC,SAG5BL,GAASA,EAAMC,MAAMG,OAAOK,SAG5BT,GAASA,EAAMC,MAAMG,OAAOE,SC3KxB,SAASK,EAAY,GAGlB,IAHkB,iBAClCC,EAAgB,MAChBC,GACc,EACd,MAAM,aAAEC,EAAY,SAAEC,IAAoCC,EAAAA,EAAAA,GACxDJ,EACAC,GAGF,OACEtC,EAAAA,cAACC,EAAW,CAACyC,IAAKH,GACfC,EAAS9B,KACRiC,IAAA,IACEC,MAAM,GACJC,EACAC,QAAQ,KAAEC,GAAM,YAChBC,IAES,SACXhD,EAAAA,cAACX,EAAW,iBAAK2D,EAAW,CAAEpD,KAAMmD,EAAMjC,IAAK+B,IAAM,IAK/D,CAEA,MAAM5C,EAAcqB,EAAAA,QAAAA,IAAAA,WAAU,CAAAC,YAAAA,2BAAAC,YAAAA,gBAAVF,CAAU,uJAInBG,GAASA,EAAMC,MAAMG,OAAOK,SAG5BT,GAASA,EAAMC,MAAMG,OAAOE,SCrBxB,SAASkB,EAAQ,GAKlB,IAJZC,UAAU,OAAEC,EAAM,KAAEC,GACpBC,MACEC,mBAAmB,MAAEC,KAEb,EACV,MAAMC,EAA8BC,EAAAA,EAAAA,MAAkBN,GAChDd,EACuB,iBAApBmB,EAAO7C,UAA0B6C,EAAO7C,SAE3C6C,EAAO7C,SADP,MAIA+C,EAAYH,EAAMI,QACtBC,GAAuC,YAA/BA,EAAKhB,KAAKI,YAAYrD,OAI1BkE,GAAeC,EAAAA,EAAAA,UACnB,IACEJ,EAAUK,QACR,CACEC,EAAoC,KAMjC,IAJDpB,MACEI,aAAa,WAAExD,KAEN,EASb,OAPAA,SAAAA,EAAYyE,SAAQtD,SACKuD,IAAnBF,EAAKrD,GAAyBqD,EAAKrD,GAAY,EAC9CqD,EAAKrD,IAAW,IAGvBqD,EAAU,MAEHA,CAAI,GAEb,CAAEG,IAAK,KAEX,IAGF,OACEnE,EAAAA,cAACoE,EAAAA,GAAM,CAAC9E,MAAM,UAAU+E,YAAY,WAAWC,IAAKlB,GAClDpD,EAAAA,cAACuE,EAAAA,kBAAiB,KAChBvE,EAAAA,cAACwE,EAAAA,YAAW,KAAC,WACbxE,EAAAA,cAACyE,EAAAA,eAAc,KAAC,aAElBzE,EAAAA,cAAC0E,EAAAA,UAAS,KAER1E,EAAAA,cAAC2E,EAAAA,EAAY,CACXhF,KAAM+D,EAAU,GAAGd,KAAKI,YAAYrD,KACpC0C,iBAAkBA,EAClBwB,aAAcA,IAGhB7D,EAAAA,cAACoC,EAAW,CAACC,iBAAkBA,EAAkBC,MAAOoB,KAIhE,C","sources":["webpack://gatsby-starter-default/./src/components/Project/ProjectItem/index.tsx","webpack://gatsby-starter-default/./src/components/Project/ProjectList/index.tsx","webpack://gatsby-starter-default/./src/pages/project/index.tsx"],"sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport { GatsbyImage, IGatsbyImageData } from 'gatsby-plugin-image'\n\nimport styled from 'styled-components'\n\ninterface I_ProjectItem {\n  title: string\n  subTitle: string\n  categories: string[]\n  startDate: string\n  endDate: string\n  page: string\n  link: string\n  thumbnail: {\n    childImageSharp: {\n      gatsbyImageData: IGatsbyImageData\n    }\n  }\n}\n\nexport default function ProjectItem({\n  title,\n  subTitle,\n  categories,\n  startDate,\n  endDate,\n  page,\n  link,\n  thumbnail: {\n    childImageSharp: { gatsbyImageData },\n  },\n}: I_ProjectItem) {\n  return (\n    <S_Container>\n      <Link to={link}>\n        <S_Card>\n          <S_TitleWrapper>\n            <S_Title>{title}</S_Title>\n            <S_SubTitle>{subTitle}</S_SubTitle>\n          </S_TitleWrapper>\n          <S_DateWrapper>\n            {startDate} ~ {endDate}\n          </S_DateWrapper>\n          <S_CategoryList>\n            {categories?.map((category, i) => (\n              <S_CategoryItem key={i}>{category}</S_CategoryItem>\n            ))}\n          </S_CategoryList>\n          <S_ImageWrapper>\n            <GatsbyImage\n              image={gatsbyImageData}\n              alt=\"\"\n              style={{ height: '200px' }}\n              objectFit=\"fill\"\n            />\n          </S_ImageWrapper>\n        </S_Card>\n      </Link>\n    </S_Container>\n  )\n}\n\nconst S_ImageWrapper = styled.div`\n  margin: 0 -24px;\n  height: 200px;\n  background: #ffffff;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 0 0 14px 14px;\n  overflow: hidden;\n`\n\nconst S_DateWrapper = styled.div`\n  overflow: hidden;\n  height: 19px;\n  margin-top: 14px;\n  font-size: 14px;\n  line-height: 20px;\n  color: ${props => props.theme.colors.boxTextColor};\n\n  @media ${props => props.theme.device.laptop} {\n    font-size: 13px;\n    line-height: 19px;\n  }\n`\n\nconst S_SubTitle = styled.div`\n  display: -webkit-box;\n  overflow: hidden;\n  -webkit-box-orient: vertical;\n  -webkit-line-clamp: 2;\n  font-size: 18px;\n  line-height: 20px;\n\n  @media ${props => props.theme.device.laptop} {\n    font-size: 14px;\n    line-height: 16px;\n  }\n  @media ${props => props.theme.device.mobile} {\n    font-size: 16px;\n    line-height: 19px;\n  }\n`\n\nconst S_Title = styled.div`\n  font-weight: bold;\n  font-size: 30px;\n  line-height: 40px;\n\n  @media ${props => props.theme.device.laptop} {\n    font-size: 22px;\n    line-height: 32px;\n  }\n  @media ${props => props.theme.device.mobile} {\n    font-size: 26px;\n    line-height: 36px;\n  }\n`\n\nconst S_TitleWrapper = styled.div`\n  height: 80px;\n\n  @media ${props => props.theme.device.laptop} {\n    height: 64px;\n  }\n  @media ${props => props.theme.device.mobile} {\n    height: 72px;\n  }\n`\n\nconst S_CategoryItem = styled.li`\n  list-style: none;\n  height: 18px;\n  font-size: 14px;\n  line-height: 13px;\n  padding: 2px 6px;\n  border-radius: 4px;\n  color: ${props => props.theme.colors.textColor};\n  background: ${props => props.theme.colors.boxTabColor};\n  white-space: nowrap;\n  text-overflow: ellipsis;\n\n  @media ${props => props.theme.device.laptop} {\n    font-size: 13px;\n  }\n  @media ${props => props.theme.device.tablet} {\n    font-size: 12px;\n  }\n`\n\nconst S_CategoryList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 1px;\n  height: 37px;\n  overflow: hidden;\n  margin-bottom: 12px;\n`\n\nconst S_Card = styled.div`\n  padding: 25px 24px 0;\n  border-radius: 14px;\n  cursor: pointer;\n  box-shadow: 4px 12px 30px 6px rgb(0 0 0 / 9%);\n  transition: 0.3s box-shadow;\n  &:hover {\n    box-shadow: 4px 12px 30px 6px rgb(0 0 0 / 18%);\n    transform: translateY(-2px);\n  }\n  background-color: ${props => props.theme.colors.boxColor};\n`\n\nconst S_Container = styled.li`\n  list-style: none;\n  margin-top: 36px;\n  width: 100%;\n  padding: 0 18px;\n\n  @media ${props => props.theme.device.laptop} {\n    padding: 0 15px;\n  }\n  @media ${props => props.theme.device.tablet} {\n    padding: 0 18px;\n  }\n  @media ${props => props.theme.device.mobile} {\n    padding: 0;\n  }\n`\n","import React from 'react'\n\nimport styled from 'styled-components'\n\nimport { I_PostItem } from 'etc/types'\nimport useInfiniteScroll, {\n  useInfiniteScrollType,\n} from 'hooks/useInfiniteScroll'\nimport ProjectItem from '../ProjectItem'\n\ninterface I_ProjectList {\n  posts: I_PostItem[]\n  selectedCategory: string\n}\n\nexport default function ProjectList({\n  selectedCategory,\n  posts,\n}: I_ProjectList) {\n  const { containerRef, postList }: useInfiniteScrollType = useInfiniteScroll(\n    selectedCategory,\n    posts,\n  )\n\n  return (\n    <S_Container ref={containerRef}>\n      {postList.map(\n        ({\n          node: {\n            id,\n            fields: { slug },\n            frontmatter,\n          },\n        }: I_PostItem) => (\n          <ProjectItem {...frontmatter} link={slug} key={id} />\n        ),\n      )}\n    </S_Container>\n  )\n}\n\nconst S_Container = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n\n  @media ${props => props.theme.device.tablet} {\n    grid-template-columns: repeat(2, 1fr);\n  }\n  @media ${props => props.theme.device.mobile} {\n    grid-template-columns: repeat(1, 1fr);\n  }\n`\n","import React, { useMemo } from 'react'\nimport { graphql } from 'gatsby'\nimport queryString, { ParsedQuery } from 'query-string'\n\nimport {\n  S_FadeInAnimation,\n  S_PageDescript,\n  S_PageTitle,\n  S_Section,\n} from 'pages'\nimport { I_CategoryList, I_PostItem } from 'etc/types'\nimport CategoryList from 'components/CategoryList'\nimport Layout from 'components/Layout'\nimport ProjectList from 'components/Project/ProjectList'\n\ninterface I_Project {\n  location: {\n    search: string\n    href: string\n  }\n  data: {\n    allMarkdownRemark: {\n      edges: I_PostItem[]\n    }\n  }\n}\n\nexport default function Project({\n  location: { search, href },\n  data: {\n    allMarkdownRemark: { edges },\n  },\n}: I_Project) {\n  const parsed: ParsedQuery<string> = queryString.parse(search)\n  const selectedCategory: string =\n    typeof parsed.category !== 'string' || !parsed.category\n      ? 'All'\n      : parsed.category\n\n  // project에 해당하는 게시물\n  const pageEdges = edges.filter(\n    edge => edge.node.frontmatter.page === 'project',\n  )\n\n  // project에 해당하는 게시물 중 카테고리 별 개수\n  const categoryList = useMemo(\n    () =>\n      pageEdges.reduce(\n        (\n          list: I_CategoryList['categoryList'],\n          {\n            node: {\n              frontmatter: { categories },\n            },\n          }: I_PostItem,\n        ) => {\n          categories?.forEach(category => {\n            if (list[category] === undefined) list[category] = 1\n            else list[category]++\n          })\n\n          list['All']++\n\n          return list\n        },\n        { All: 0 },\n      ),\n    [],\n  )\n\n  return (\n    <Layout title=\"Project\" description=\"작업한 프로젝트\" url={href}>\n      <S_FadeInAnimation>\n        <S_PageTitle>Project</S_PageTitle>\n        <S_PageDescript>작업한 프로젝트</S_PageDescript>\n      </S_FadeInAnimation>\n      <S_Section>\n        {/* 카테고리 */}\n        <CategoryList\n          page={pageEdges[0].node.frontmatter.page}\n          selectedCategory={selectedCategory}\n          categoryList={categoryList}\n        />\n        {/* 프로젝트 목록 */}\n        <ProjectList selectedCategory={selectedCategory} posts={pageEdges} />\n      </S_Section>\n    </Layout>\n  )\n}\n\nexport const getProjectList = graphql`\n  query getProjectList {\n    allMarkdownRemark(\n      sort: {\n        order: DESC\n        fields: [frontmatter___startDate, frontmatter___title]\n      }\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            page\n            categories\n            startDate(formatString: \"YYYY.MM.DD\")\n            endDate(formatString: \"YYYY.MM.DD\")\n            title\n            subTitle\n            thumbnail {\n              childImageSharp {\n                gatsbyImageData\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["ProjectItem","title","subTitle","categories","startDate","endDate","page","link","thumbnail","childImageSharp","gatsbyImageData","React","S_Container","Link","to","S_Card","S_TitleWrapper","S_Title","S_SubTitle","S_DateWrapper","S_CategoryList","map","category","i","S_CategoryItem","key","S_ImageWrapper","GatsbyImage","image","alt","style","height","objectFit","styled","displayName","componentId","props","theme","colors","boxTextColor","device","laptop","mobile","textColor","boxTabColor","tablet","boxColor","ProjectList","selectedCategory","posts","containerRef","postList","useInfiniteScroll","ref","_ref2","node","id","fields","slug","frontmatter","Project","location","search","href","data","allMarkdownRemark","edges","parsed","queryString","pageEdges","filter","edge","categoryList","useMemo","reduce","list","forEach","undefined","All","Layout","description","url","S_FadeInAnimation","S_PageTitle","S_PageDescript","S_Section","CategoryList"],"sourceRoot":""}