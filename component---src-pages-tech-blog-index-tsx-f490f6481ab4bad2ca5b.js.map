{"version":3,"file":"component---src-pages-tech-blog-index-tsx-f490f6481ab4bad2ca5b.js","mappings":"2MAwBe,SAASA,EAAa,GAId,IAJc,KACnCC,EAAI,iBACJC,EAAgB,aAChBC,GACkB,EAClB,OACEC,EAAAA,cAACC,EAAmB,KACjBC,OAAOC,QAAQJ,GAAcK,KAAIC,IAAAA,IAAEC,EAAMC,GAAM,SAC9CP,EAAAA,cAACQ,EAAY,CACXC,GAAE,IAAMZ,EAAI,cAAcS,EAC1BI,OAAQJ,IAASR,EACjBa,IAAKL,GAEJA,EACY,IAIvB,CAEA,MAAME,GAAeI,EAAAA,EAAAA,UAAOC,IAAAA,IAAC,OAAEH,KAAWI,GAAkB,SAC1Dd,EAAAA,cAACe,EAAAA,GAASD,EAAS,IACnB,gFAFmBF,CAEnB,uSAUWE,GAASA,EAAME,MAAMC,UAChBH,GAASA,EAAME,MAAME,iBAE5BJ,GACPA,EAAMJ,OAASI,EAAME,MAAMC,QAAUH,EAAME,MAAMG,YACrCL,GACZA,EAAMJ,OAASI,EAAME,MAAME,eAAiBJ,EAAME,MAAMI,WAUtDnB,EAAsBW,EAAAA,QAAAA,IAAAA,WAAU,4EAAVA,CAAU,4H,qEC7DvB,SAASS,EACtBvB,EACAwB,GAEA,MAAMC,GACJC,EAAAA,EAAAA,QAAuB,MACnBC,GACJD,EAAAA,EAAAA,QAA6B,OACzB,EAACjB,EAAM,EAACmB,IAAYC,EAAAA,EAAAA,UAAiB,GAErCC,GAAqBC,EAAAA,EAAAA,UACzB,IACEP,EAAMQ,QACJC,IAAAA,IACEC,MACEC,aAAa,WAAEC,KAER,QACY,QAArBpC,IACIoC,aAAU,EAAVA,EAAYC,SAASrC,GACjB,KAEd,CAACA,IA4BH,OAzBAsC,EAAAA,EAAAA,YAAU,KACRX,EAASY,QAAU,IAAIC,sBAAqB,CAACnC,EAASsB,KAC/CtB,EAAQ,GAAGoC,iBAEhBb,GAASc,GAASA,EAAQ,IAC1Bf,EAASgB,UAAUtC,EAAQ,GAAGuC,QAAO,GACrC,GACD,KAEHN,EAAAA,EAAAA,YAAU,IAAMV,EAAS,IAAI,CAAC5B,KAE9BsC,EAAAA,EAAAA,YAAU,KAtCqB,EAwCA7B,GAASqB,EAAmBe,QAC9B,OAAzBpB,EAAac,SAC4B,IAAzCd,EAAac,QAAQO,SAASD,QACT,OAArBlB,EAASY,SAIXZ,EAASY,QAAQQ,QACftB,EAAac,QAAQO,SAASrB,EAAac,QAAQO,SAASD,OAAS,GACtE,GACA,CAACpC,EAAOT,IAEJ,CACLyB,eACAuB,SAAUlB,EAAmBmB,MAAM,EAtDN,EAsDSxC,GAE1C,C,oMC3Ce,SAASyC,EAAK,GAOf,IANZC,UAAU,OAAEC,GACZC,MACEC,MACEC,cAAc,MAAEC,EAAK,YAAEC,EAAW,QAAEC,MAG9B,EACV,OACExD,EAAAA,cAACyD,EAAAA,EAAM,CAACH,MAAOA,EAAOC,YAAaA,EAAaG,IAAKF,GACnDxD,EAAAA,cAAC2D,EAAS,KAAC,qBACX3D,EAAAA,cAAC2D,EAAS,KAAC,yBACX3D,EAAAA,cAAC4D,EAAY,KAAC,qBAGpB,CAEO,MAYMC,EAAUjD,EAAAA,QAAAA,IAAAA,WAAU,CAAAkD,YAAAA,iBAAAC,YAAAA,gBAAVnD,CAAU,4EAQpBgD,EAAehD,EAAAA,QAAAA,EAAAA,WAAQ,CAAAkD,YAAAA,sBAAAC,YAAAA,gBAARnD,CAAQ,mHAIzBE,GAASA,EAAME,MAAMgD,eAOnBL,EAAY/C,EAAAA,QAAAA,EAAAA,WAAQ,CAAAkD,YAAAA,mBAAAC,YAAAA,gBAARnD,CAAQ,yF,wJCzDlB,SAASqD,EAAS,GAMd,IANc,MAC/BX,EAAK,KACLY,EAAI,WACJhC,EAAU,KACVrC,EAAI,KACJsE,GACc,EACd,OACEnE,EAAAA,cAACoE,EAAe,CAAC3D,GAAI0D,GACnBnE,EAAAA,cAACqE,EAAQ,KACNnC,aAAU,EAAVA,EAAY9B,KAAIkE,GACftE,EAAAA,cAACQ,EAAY,CAACG,IAAK2D,GAAWA,MAGlCtE,EAAAA,cAACuE,EAAK,KAAEjB,GACRtD,EAAAA,cAACwE,EAAI,KAAEN,GAGb,CAEA,MAAMM,EAAO5D,EAAAA,QAAAA,IAAAA,WAAU,0DAAVA,CAAU,sDAMjB2D,EAAQ3D,EAAAA,QAAAA,IAAAA,WAAU,2DAAVA,CAAU,sEAOlBJ,EAAeI,EAAAA,QAAAA,IAAAA,WAAU,kEAAVA,CAAU,yGAMTE,GAASA,EAAME,MAAMyD,cAGrCJ,EAAWzD,EAAAA,QAAAA,IAAAA,WAAU,8DAAVA,CAAU,0CAMrBwD,GAAkBxD,EAAAA,EAAAA,SAAOG,EAAAA,IAAK,gFAAZH,CAAY,yOAWdE,GAASA,EAAME,MAAM0D,WCzD5B,SAASC,EAAS,GAA6C,IAA7C,iBAAE7E,EAAgB,MAAEwB,GAAsB,EAgBzE,MAAM,aAAEC,EAAY,SAAEuB,IAAoCzB,EAAAA,EAAAA,GACxDvB,EACAwB,GAEF,OACEtB,EAAAA,cAAC4E,EAAe,CAACC,IAAKtD,GACnBuB,EAAS1C,KACRC,IAAAA,IACE2B,MAAM,GACJ8C,EACAC,QAAQ,KAAEC,GAAM,YAChB/C,IAEO,SACTjC,EAAAA,cAACiE,EAAQ,iBAAKhC,EAAW,CAAEkC,KAAMa,EAAMrE,IAAKmE,IAAM,IAK5D,CAEA,MAAMF,EAAkBhE,EAAAA,QAAAA,IAAAA,WAAU,oEAAVA,CAAU,wHC5BnB,SAASqE,EAAS,GAKf,IAJhBhC,UAAU,SAAEiC,EAAQ,OAAEhC,EAAM,KAAEiC,GAC9BhC,MACEiC,mBAAmB,MAAEC,KAET,EACd,MAAMC,EAA8BC,EAAAA,EAAAA,MAAkBrC,GAChDpD,EACuB,iBAApBwF,EAAOhB,UAA0BgB,EAAOhB,SAE3CgB,EAAOhB,SADP,MAIAkB,EAAYH,EAAMvD,QACtB2D,GAAuC,cAA/BA,EAAKzD,KAAKC,YAAYpC,OAI1BE,GAAe8B,EAAAA,EAAAA,UACnB,IACE2D,EAAUE,QACR,CACEC,EAAuC,KAMpC,IAJD3D,MACEC,aAAa,WAAEC,KAER,EASX,OAPAA,SAAAA,EAAY0D,SAAQtB,SACKuB,IAAnBF,EAAKrB,GAAyBqB,EAAKrB,GAAY,EAC9CqB,EAAKrB,IAAW,IAGvBqB,EAAU,MAEHA,CAAI,GAEb,CAAEG,IAAK,KAEX,IAGF,OACE9F,EAAAA,cAACyD,EAAAA,EAAM,CAACH,MAAM,YAAYC,YAAY,cAAcG,IAAKyB,GACvDnF,EAAAA,cAAAA,MAAAA,KACEA,EAAAA,cAAC2D,EAAAA,UAAS,KAAC,aACX3D,EAAAA,cAAC4D,EAAAA,aAAY,KAAC,gBAEhB5D,EAAAA,cAAC6D,EAAAA,QAAO,KAEN7D,EAAAA,cAACJ,EAAAA,EAAY,CACXC,KAAM2F,EAAU,GAAGxD,KAAKC,YAAYpC,KACpCC,iBAAkBA,EAClBC,aAAcA,IAGhBC,EAAAA,cAAC2E,EAAQ,CAAC7E,iBAAkBA,EAAkBwB,MAAOkE,KAI7D,C,8RCrFA,MAAMO,EAAQ,eACRC,EAAgB,IAAIC,OAAO,IAAMF,EAAQ,aAAc,MACvDG,EAAe,IAAID,OAAO,IAAMF,EAAQ,KAAM,MAEpD,SAASI,EAAiBC,EAAYC,GACrC,IAEC,MAAO,CAACC,mBAAmBF,EAAWG,KAAK,KAG5C,CAFE,MAEF,CAEA,GAA0B,IAAtBH,EAAWzD,OACd,OAAOyD,EAGRC,EAAQA,GAAS,EAGjB,MAAMG,EAAOJ,EAAWrD,MAAM,EAAGsD,GAC3BI,EAAQL,EAAWrD,MAAMsD,GAE/B,OAAOK,MAAMC,UAAUC,OAAOC,KAAK,GAAIV,EAAiBK,GAAOL,EAAiBM,GACjF,CAEA,SAASK,EAAOC,GACf,IACC,OAAOT,mBAAmBS,EAW3B,CAVE,MACD,IAAIC,EAASD,EAAME,MAAMjB,IAAkB,GAE3C,IAAK,IAAIkB,EAAI,EAAGA,EAAIF,EAAOrE,OAAQuE,IAGlCF,GAFAD,EAAQZ,EAAiBa,EAAQE,GAAGX,KAAK,KAE1BU,MAAMjB,IAAkB,GAGxC,OAAOe,CACR,CACD,CAsCe,SAASI,EAAmBC,GAC1C,GAA0B,iBAAfA,EACV,MAAM,IAAIC,UAAU,6DAA+DD,EAAa,KAGjG,IAEC,OAAOd,mBAAmBc,EAI3B,CAHE,MAED,OA9CF,SAAkCL,GAEjC,MAAMO,EAAa,CAClB,SAAU,KACV,SAAU,MAGX,IAAIL,EAAQf,EAAaqB,KAAKR,GAC9B,KAAOE,GAAO,CACb,IAECK,EAAWL,EAAM,IAAMX,mBAAmBW,EAAM,GAOjD,CANE,MACD,MAAMO,EAASV,EAAOG,EAAM,IAExBO,IAAWP,EAAM,KACpBK,EAAWL,EAAM,IAAMO,EAEzB,CAEAP,EAAQf,EAAaqB,KAAKR,EAC3B,CAGAO,EAAW,OAAS,IAEpB,MAAMnH,EAAUD,OAAOuH,KAAKH,GAE5B,IAAK,MAAM3G,KAAOR,EAEjB4G,EAAQA,EAAMW,QAAQ,IAAIzB,OAAOtF,EAAK,KAAM2G,EAAW3G,IAGxD,OAAOoG,CACR,CAYSY,CAAyBP,EACjC,CACD,CCzFe,SAASQ,EAAaC,EAAQC,GAC5C,GAAwB,iBAAXD,GAA4C,iBAAdC,EAC1C,MAAM,IAAIT,UAAU,iDAGrB,GAAe,KAAXQ,GAA+B,KAAdC,EACpB,MAAO,GAGR,MAAMC,EAAiBF,EAAOG,QAAQF,GAEtC,OAAwB,IAApBC,EACI,GAGD,CACNF,EAAO9E,MAAM,EAAGgF,GAChBF,EAAO9E,MAAMgF,EAAiBD,EAAUnF,QAE1C,CCnBO,SAASsF,EAAYC,EAAQC,GACnC,MAAMX,EAAS,CAAC,EAEhB,GAAId,MAAM0B,QAAQD,GACjB,IAAK,MAAMxH,KAAOwH,EAAW,CAC5B,MAAME,EAAanI,OAAOoI,yBAAyBJ,EAAQvH,GACvD0H,GAAYE,YACfrI,OAAOsI,eAAehB,EAAQ7G,EAAK0H,EAErC,MAGA,IAAK,MAAM1H,KAAO8H,QAAQC,QAAQR,GAAS,CAC1C,MAAMG,EAAanI,OAAOoI,yBAAyBJ,EAAQvH,GAC3D,GAAI0H,EAAWE,WAAY,CAEtBJ,EAAUxH,EADAuH,EAAOvH,GACKuH,IACzBhI,OAAOsI,eAAehB,EAAQ7G,EAAK0H,EAErC,CACD,CAGD,OAAOb,CACR,CCpBA,MAKMmB,EAA2BC,OAAO,4BA8OxC,SAASC,EAA6BrG,GACrC,GAAqB,iBAAVA,GAAuC,IAAjBA,EAAMG,OACtC,MAAM,IAAI0E,UAAU,uDAEtB,CAEA,SAASyB,EAAOtG,EAAOuG,GACtB,OAAIA,EAAQD,OACJC,EAAQC,OAxPiBC,mBAwPQzG,GAxPmBkF,QAAQ,YAAYwB,GAAK,IAAIA,EAAEC,WAAW,GAAGC,SAAS,IAAIC,kBAwPpEJ,mBAAmBzG,GAG9DA,CACR,CAEA,SAAS,EAAOA,EAAOuG,GACtB,OAAIA,EAAQjC,OACJ,EAAgBtE,GAGjBA,CACR,CAEA,SAAS8G,EAAWvC,GACnB,OAAIL,MAAM0B,QAAQrB,GACVA,EAAMwC,OAGO,iBAAVxC,EACHuC,EAAWpJ,OAAOuH,KAAKV,IAC5BwC,MAAK,CAACC,EAAGC,IAAMC,OAAOF,GAAKE,OAAOD,KAClCrJ,KAAIO,GAAOoG,EAAMpG,KAGboG,CACR,CAEA,SAAS4C,EAAW5C,GACnB,MAAM6C,EAAY7C,EAAMiB,QAAQ,KAKhC,OAJmB,IAAf4B,IACH7C,EAAQA,EAAMhE,MAAM,EAAG6G,IAGjB7C,CACR,CAYA,SAAS8C,EAAWrH,EAAOuG,GAO1B,OANIA,EAAQe,eAAiBJ,OAAOK,MAAML,OAAOlH,KAA6B,iBAAVA,GAAuC,KAAjBA,EAAMwH,OAC/FxH,EAAQkH,OAAOlH,IACLuG,EAAQkB,eAA2B,OAAVzH,GAA2C,SAAxBA,EAAM0H,eAAoD,UAAxB1H,EAAM0H,gBAC9F1H,EAAgC,SAAxBA,EAAM0H,eAGR1H,CACR,CAEO,SAAS2H,EAAQpD,GAEvB,MAAMqD,GADNrD,EAAQ4C,EAAW5C,IACMiB,QAAQ,KACjC,OAAoB,IAAhBoC,EACI,GAGDrD,EAAMhE,MAAMqH,EAAa,EACjC,CAEO,SAASC,EAAMC,EAAOvB,GAW5BF,GAVAE,EAAU,CACTjC,QAAQ,EACRyC,MAAM,EACNgB,YAAa,OACbC,qBAAsB,IACtBV,cAAc,EACdG,eAAe,KACZlB,IAGiCyB,sBAErC,MAAMC,EApMP,SAA8B1B,GAC7B,IAAIvB,EAEJ,OAAQuB,EAAQwB,aACf,IAAK,QACJ,MAAO,CAAC5J,EAAK6B,EAAOkI,KACnBlD,EAAS,YAAYD,KAAK5G,GAE1BA,EAAMA,EAAI+G,QAAQ,UAAW,IAExBF,QAKoB3B,IAArB6E,EAAY/J,KACf+J,EAAY/J,GAAO,CAAC,GAGrB+J,EAAY/J,GAAK6G,EAAO,IAAMhF,GAR7BkI,EAAY/J,GAAO6B,CAQe,EAIrC,IAAK,UACJ,MAAO,CAAC7B,EAAK6B,EAAOkI,KACnBlD,EAAS,SAASD,KAAK5G,GACvBA,EAAMA,EAAI+G,QAAQ,OAAQ,IAErBF,OAKoB3B,IAArB6E,EAAY/J,GAKhB+J,EAAY/J,GAAO,IAAI+J,EAAY/J,GAAM6B,GAJxCkI,EAAY/J,GAAO,CAAC6B,GALpBkI,EAAY/J,GAAO6B,CAS2B,EAIjD,IAAK,uBACJ,MAAO,CAAC7B,EAAK6B,EAAOkI,KACnBlD,EAAS,WAAWD,KAAK5G,GACzBA,EAAMA,EAAI+G,QAAQ,SAAU,IAEvBF,OAKoB3B,IAArB6E,EAAY/J,GAKhB+J,EAAY/J,GAAO,IAAI+J,EAAY/J,GAAM6B,GAJxCkI,EAAY/J,GAAO,CAAC6B,GALpBkI,EAAY/J,GAAO6B,CAS2B,EAIjD,IAAK,QACL,IAAK,YACJ,MAAO,CAAC7B,EAAK6B,EAAOkI,KACnB,MAAMtC,EAA2B,iBAAV5F,GAAsBA,EAAML,SAAS4G,EAAQyB,sBAC9DG,EAAmC,iBAAVnI,IAAuB4F,GAAW,EAAO5F,EAAOuG,GAAS5G,SAAS4G,EAAQyB,sBACzGhI,EAAQmI,EAAiB,EAAOnI,EAAOuG,GAAWvG,EAClD,MAAMoI,EAAWxC,GAAWuC,EAAiBnI,EAAM6D,MAAM0C,EAAQyB,sBAAsBpK,KAAIyK,GAAQ,EAAOA,EAAM9B,KAAuB,OAAVvG,EAAiBA,EAAQ,EAAOA,EAAOuG,GACpK2B,EAAY/J,GAAOiK,CAAQ,EAI7B,IAAK,oBACJ,MAAO,CAACjK,EAAK6B,EAAOkI,KACnB,MAAMtC,EAAU,SAAS0C,KAAKnK,GAG9B,GAFAA,EAAMA,EAAI+G,QAAQ,OAAQ,KAErBU,EAEJ,YADAsC,EAAY/J,GAAO6B,EAAQ,EAAOA,EAAOuG,GAAWvG,GAIrD,MAAMuI,EAAuB,OAAVvI,EAChB,GACAA,EAAM6D,MAAM0C,EAAQyB,sBAAsBpK,KAAIyK,GAAQ,EAAOA,EAAM9B,UAE7ClD,IAArB6E,EAAY/J,GAKhB+J,EAAY/J,GAAO,IAAI+J,EAAY/J,MAASoK,GAJ3CL,EAAY/J,GAAOoK,CAImC,EAIzD,QACC,MAAO,CAACpK,EAAK6B,EAAOkI,UACM7E,IAArB6E,EAAY/J,GAKhB+J,EAAY/J,GAAO,IAAI,CAAC+J,EAAY/J,IAAMqK,OAAQxI,GAJjDkI,EAAY/J,GAAO6B,CAIoC,EAI5D,CA0FmByI,CAAqBlC,GAGjCmC,EAAchL,OAAOiL,OAAO,MAElC,GAAqB,iBAAVb,EACV,OAAOY,EAKR,KAFAZ,EAAQA,EAAMN,OAAOtC,QAAQ,SAAU,KAGtC,OAAOwD,EAGR,IAAK,MAAME,KAAad,EAAMjE,MAAM,KAAM,CACzC,GAAkB,KAAd+E,EACH,SAGD,MAAMC,EAAatC,EAAQjC,OAASsE,EAAU1D,QAAQ,MAAO,KAAO0D,EAEpE,IAAKzK,EAAK6B,GAASoF,EAAayD,EAAY,UAEhCxF,IAARlF,IACHA,EAAM0K,GAKP7I,OAAkBqD,IAAVrD,EAAsB,KAAQ,CAAC,QAAS,YAAa,qBAAqBL,SAAS4G,EAAQwB,aAAe/H,EAAQ,EAAOA,EAAOuG,GACxI0B,EAAU,EAAO9J,EAAKoI,GAAUvG,EAAO0I,EACxC,CAEA,IAAK,MAAOvK,EAAK6B,KAAUtC,OAAOC,QAAQ+K,GACzC,GAAqB,iBAAV1I,GAAgC,OAAVA,EAChC,IAAK,MAAO8I,EAAMC,KAAWrL,OAAOC,QAAQqC,GAC3CA,EAAM8I,GAAQzB,EAAW0B,EAAQxC,QAGlCmC,EAAYvK,GAAOkJ,EAAWrH,EAAOuG,GAIvC,OAAqB,IAAjBA,EAAQQ,KACJ2B,IAKiB,IAAjBnC,EAAQQ,KAAgBrJ,OAAOuH,KAAKyD,GAAa3B,OAASrJ,OAAOuH,KAAKyD,GAAa3B,KAAKR,EAAQQ,OAAO7D,QAAO,CAAC8B,EAAQ7G,KAC9H,MAAM6B,EAAQ0I,EAAYvK,GAQ1B,OAPI6K,QAAQhJ,IAA2B,iBAAVA,IAAuBkE,MAAM0B,QAAQ5F,GAEjEgF,EAAO7G,GAAO2I,EAAW9G,GAEzBgF,EAAO7G,GAAO6B,EAGRgF,CAAM,GACXtH,OAAOiL,OAAO,MAClB,CAEO,SAASM,EAAUvD,EAAQa,GACjC,IAAKb,EACJ,MAAO,GAQRW,GALAE,EAAU,CAACD,QAAQ,EAClBE,QAAQ,EACRuB,YAAa,OACbC,qBAAsB,OAAQzB,IAEMyB,sBAErC,MAAMkB,EAAe/K,GACnBoI,EAAQ4C,UAvZwBnJ,MAuZM0F,EAAOvH,IAC1CoI,EAAQ6C,iBAAmC,KAAhB1D,EAAOvH,GAGjC8J,EApZP,SAA+B1B,GAC9B,OAAQA,EAAQwB,aACf,IAAK,QACJ,OAAO5J,GAAO,CAAC6G,EAAQhF,KACtB,MAAMqJ,EAAQrE,EAAO7E,OAErB,YACWkD,IAAVrD,GACIuG,EAAQ4C,UAAsB,OAAVnJ,GACpBuG,EAAQ6C,iBAA6B,KAAVpJ,EAExBgF,EAGM,OAAVhF,EACI,IACHgF,EAAQ,CAACsB,EAAOnI,EAAKoI,GAAU,IAAK8C,EAAO,KAAKtF,KAAK,KAInD,IACHiB,EACH,CAACsB,EAAOnI,EAAKoI,GAAU,IAAKD,EAAO+C,EAAO9C,GAAU,KAAMD,EAAOtG,EAAOuG,IAAUxC,KAAK,IACvF,EAIH,IAAK,UACJ,OAAO5F,GAAO,CAAC6G,EAAQhF,SAEXqD,IAAVrD,GACIuG,EAAQ4C,UAAsB,OAAVnJ,GACpBuG,EAAQ6C,iBAA6B,KAAVpJ,EAExBgF,EAGM,OAAVhF,EACI,IACHgF,EACH,CAACsB,EAAOnI,EAAKoI,GAAU,MAAMxC,KAAK,KAI7B,IACHiB,EACH,CAACsB,EAAOnI,EAAKoI,GAAU,MAAOD,EAAOtG,EAAOuG,IAAUxC,KAAK,KAK9D,IAAK,uBACJ,OAAO5F,GAAO,CAAC6G,EAAQhF,SAEXqD,IAAVrD,GACIuG,EAAQ4C,UAAsB,OAAVnJ,GACpBuG,EAAQ6C,iBAA6B,KAAVpJ,EAExBgF,EAGM,OAAVhF,EACI,IACHgF,EACH,CAACsB,EAAOnI,EAAKoI,GAAU,UAAUxC,KAAK,KAIjC,IACHiB,EACH,CAACsB,EAAOnI,EAAKoI,GAAU,SAAUD,EAAOtG,EAAOuG,IAAUxC,KAAK,KAKjE,IAAK,QACL,IAAK,YACL,IAAK,oBAAqB,CACzB,MAAMuF,EAAsC,sBAAxB/C,EAAQwB,YACzB,MACA,IAEH,OAAO5J,GAAO,CAAC6G,EAAQhF,SAEXqD,IAAVrD,GACIuG,EAAQ4C,UAAsB,OAAVnJ,GACpBuG,EAAQ6C,iBAA6B,KAAVpJ,EAExBgF,GAIRhF,EAAkB,OAAVA,EAAiB,GAAKA,EAER,IAAlBgF,EAAO7E,OACH,CAAC,CAACmG,EAAOnI,EAAKoI,GAAU+C,EAAahD,EAAOtG,EAAOuG,IAAUxC,KAAK,KAGnE,CAAC,CAACiB,EAAQsB,EAAOtG,EAAOuG,IAAUxC,KAAKwC,EAAQyB,uBAExD,CAEA,QACC,OAAO7J,GAAO,CAAC6G,EAAQhF,SAEXqD,IAAVrD,GACIuG,EAAQ4C,UAAsB,OAAVnJ,GACpBuG,EAAQ6C,iBAA6B,KAAVpJ,EAExBgF,EAGM,OAAVhF,EACI,IACHgF,EACHsB,EAAOnI,EAAKoI,IAIP,IACHvB,EACH,CAACsB,EAAOnI,EAAKoI,GAAU,IAAKD,EAAOtG,EAAOuG,IAAUxC,KAAK,KAK9D,CAsRmBwF,CAAsBhD,GAElCiD,EAAa,CAAC,EAEpB,IAAK,MAAOrL,EAAK6B,KAAUtC,OAAOC,QAAQ+H,GACpCwD,EAAa/K,KACjBqL,EAAWrL,GAAO6B,GAIpB,MAAMiF,EAAOvH,OAAOuH,KAAKuE,GAMzB,OAJqB,IAAjBjD,EAAQQ,MACX9B,EAAK8B,KAAKR,EAAQQ,MAGZ9B,EAAKrH,KAAIO,IACf,MAAM6B,EAAQ0F,EAAOvH,GAErB,YAAckF,IAAVrD,EACI,GAGM,OAAVA,EACIsG,EAAOnI,EAAKoI,GAGhBrC,MAAM0B,QAAQ5F,GACI,IAAjBA,EAAMG,QAAwC,sBAAxBoG,EAAQwB,YAC1BzB,EAAOnI,EAAKoI,GAAW,KAGxBvG,EACLkD,OAAO+E,EAAU9J,GAAM,IACvB4F,KAAK,KAGDuC,EAAOnI,EAAKoI,GAAW,IAAMD,EAAOtG,EAAOuG,EAAQ,IACxDjH,QAAOoH,GAAKA,EAAEvG,OAAS,IAAG4D,KAAK,IACnC,CAEO,SAAS0F,EAASvI,EAAKqF,GAC7BA,EAAU,CACTjC,QAAQ,KACLiC,GAGJ,IAAKmD,EAAMC,GAAQvE,EAAalE,EAAK,KAMrC,YAJamC,IAATqG,IACHA,EAAOxI,GAGD,CACNA,IAAKwI,GAAM7F,MAAM,OAAO,IAAM,GAC9BiE,MAAOD,EAAMF,EAAQzG,GAAMqF,MACvBA,GAAWA,EAAQqD,yBAA2BD,EAAO,CAACE,mBAAoB,EAAOF,EAAMpD,IAAY,CAAC,EAE1G,CAEO,SAASuD,EAAapE,EAAQa,GACpCA,EAAU,CACTD,QAAQ,EACRE,QAAQ,EACR,CAACL,IAA2B,KACzBI,GAGJ,MAAMrF,EAAMiG,EAAWzB,EAAOxE,KAAK2C,MAAM,KAAK,IAAM,GAQpD,IAAId,EAAckG,EALJ,IACVpB,EAHiBF,EAAQjC,EAAOxE,KAGZ,CAAC6F,MAAM,OAC3BrB,EAAOoC,OAGwBvB,GAC/BxD,IACHA,EAAc,IAAIA,KAGnB,IAAI4G,EA5ML,SAAiBzI,GAChB,IAAIyI,EAAO,GACX,MAAMvC,EAAYlG,EAAIsE,QAAQ,KAK9B,OAJmB,IAAf4B,IACHuC,EAAOzI,EAAIX,MAAM6G,IAGXuC,CACR,CAoMYI,CAAQrE,EAAOxE,KAC1B,GAAIwE,EAAOmE,mBAAoB,CAC9B,MAAMG,EAA6B,IAAIC,IAAI/I,GAC3C8I,EAA2BL,KAAOjE,EAAOmE,mBACzCF,EAAOpD,EAAQJ,GAA4B6D,EAA2BL,KAAO,IAAIjE,EAAOmE,oBACzF,CAEA,MAAO,GAAG3I,IAAM6B,IAAc4G,GAC/B,CAEO,SAASO,EAAK3F,EAAOjF,EAAQiH,GACnCA,EAAU,CACTqD,yBAAyB,EACzB,CAACzD,IAA2B,KACzBI,GAGJ,MAAM,IAACrF,EAAG,MAAE4G,EAAK,mBAAE+B,GAAsBJ,EAASlF,EAAOgC,GAEzD,OAAOuD,EAAa,CACnB5I,MACA4G,MAAOrC,EAAYqC,EAAOxI,GAC1BuK,sBACEtD,EACJ,CAEO,SAAS4D,EAAQ5F,EAAOjF,EAAQiH,GAGtC,OAAO2D,EAAK3F,EAFYL,MAAM0B,QAAQtG,GAAUnB,IAAQmB,EAAOK,SAASxB,GAAO,CAACA,EAAK6B,KAAWV,EAAOnB,EAAK6B,GAExEuG,EACrC,CC5gBA,O","sources":["webpack://gatsby-starter-default/./src/components/CategoryList/index.tsx","webpack://gatsby-starter-default/./src/hooks/useInfiniteScroll.tsx","webpack://gatsby-starter-default/./src/pages/index.tsx","webpack://gatsby-starter-default/./src/components/Blog/BlogItem/index.tsx","webpack://gatsby-starter-default/./src/components/Blog/BlogList/index.tsx","webpack://gatsby-starter-default/./src/pages/tech-blog/index.tsx","webpack://gatsby-starter-default/./node_modules/decode-uri-component/index.js","webpack://gatsby-starter-default/./node_modules/split-on-first/index.js","webpack://gatsby-starter-default/./node_modules/filter-obj/index.js","webpack://gatsby-starter-default/./node_modules/query-string/base.js","webpack://gatsby-starter-default/./node_modules/query-string/index.js"],"sourcesContent":["import React, { ReactNode } from 'react'\nimport { Link } from 'gatsby'\n\nimport styled from 'styled-components'\n\nexport interface CategoryListProps {\n  page: string\n  selectedCategory: string\n  categoryList: {\n    [key: string]: number\n  }\n}\n\ninterface ActiveProps {\n  active: boolean\n}\n\ninterface LinkProps {\n  children: ReactNode\n  className?: string\n  to: string\n  active: boolean\n}\n\nexport default function CategoryList({\n  page,\n  selectedCategory,\n  categoryList,\n}: CategoryListProps) {\n  return (\n    <CategoryListWrapper>\n      {Object.entries(categoryList).map(([name, count]) => (\n        <CategoryItem\n          to={`/${page}/?category=${name}`}\n          active={name === selectedCategory}\n          key={name}\n        >\n          {name}\n        </CategoryItem>\n      ))}\n    </CategoryListWrapper>\n  )\n}\n\nconst CategoryItem = styled(({ active, ...props }: LinkProps) => (\n  <Link {...props} />\n))<ActiveProps>`\n  margin-right: 10px;\n  height: 37px;\n  padding: 0 17px;\n  font-size: 14px;\n  line-height: 37px;\n  border-radius: 30px;\n  letter-spacing: -0.5px;\n  cursor: pointer;\n  &:hover {\n    color: ${props => props.theme.bgColor};\n    background: ${props => props.theme.selectBoxColor};\n  }\n  color: ${props =>\n    props.active ? props.theme.bgColor : props.theme.textColor};\n  background: ${props =>\n    props.active ? props.theme.selectBoxColor : props.theme.tabColor};\n\n  @media screen and (min-width: 1024px) {\n    height: 44px;\n    padding: 0 20px;\n    font-size: 16px;\n    line-height: 43px;\n  }\n`\n\nconst CategoryListWrapper = styled.div`\n  display: flex;\n\n  @media screen and (max-width: 1024px) {\n    overflow-x: auto;\n    white-space: nowrap;\n    -webkit-overflow-scrolling: touch;\n  }\n`\n","import { MutableRefObject, useState, useRef, useMemo, useEffect } from 'react'\n\nimport { ItemType } from 'etc/types'\n\nexport interface useInfiniteScrollType {\n  containerRef: MutableRefObject<HTMLDivElement | null>\n  postList: ItemType[]\n}\n\nconst NUMBER_OF_ITEMS_PER_PAGE = 6\n\nexport default function useInfiniteScroll(\n  selectedCategory: string,\n  posts: ItemType[],\n): useInfiniteScrollType {\n  const containerRef: MutableRefObject<HTMLDivElement | null> =\n    useRef<HTMLDivElement>(null)\n  const observer: MutableRefObject<IntersectionObserver | null> =\n    useRef<IntersectionObserver>(null)\n  const [count, setCount] = useState<number>(1)\n\n  const postListByCategory = useMemo<ItemType[]>(\n    () =>\n      posts.filter(\n        ({\n          node: {\n            frontmatter: { categories },\n          },\n        }: ItemType) =>\n          selectedCategory !== 'All'\n            ? categories?.includes(selectedCategory)\n            : true,\n      ),\n    [selectedCategory],\n  )\n\n  useEffect(() => {\n    observer.current = new IntersectionObserver((entries, observer) => {\n      if (!entries[0].isIntersecting) return\n\n      setCount(value => value + 1)\n      observer.unobserve(entries[0].target)\n    })\n  }, [])\n\n  useEffect(() => setCount(1), [selectedCategory])\n\n  useEffect(() => {\n    if (\n      NUMBER_OF_ITEMS_PER_PAGE * count >= postListByCategory.length ||\n      containerRef.current === null ||\n      containerRef.current.children.length === 0 ||\n      observer.current === null\n    )\n      return\n\n    observer.current.observe(\n      containerRef.current.children[containerRef.current.children.length - 1],\n    )\n  }, [count, selectedCategory])\n\n  return {\n    containerRef,\n    postList: postListByCategory.slice(0, count * NUMBER_OF_ITEMS_PER_PAGE),\n  }\n}\n","import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport styled from 'styled-components'\n\nimport Layout from 'components/Layout'\n\ninterface HomeProps {\n  location: {\n    search: string\n  }\n  data: {\n    site: {\n      siteMetadata: {\n        title: string\n        description: string\n        siteUrl: string\n      }\n    }\n  }\n}\n\nexport default function Home({\n  location: { search },\n  data: {\n    site: {\n      siteMetadata: { title, description, siteUrl },\n    },\n  },\n}: HomeProps) {\n  return (\n    <Layout title={title} description={description} url={siteUrl}>\n      <PageTitle>I'm Wonjong Jang,</PageTitle>\n      <PageTitle>a Frontend Developer.</PageTitle>\n      <PageDescript>프론트엔드 개발자 장원종입니다.</PageDescript>\n    </Layout>\n  )\n}\n\nexport const getPostList = graphql`\n  query getPostList {\n    site {\n      siteMetadata {\n        title\n        description\n        siteUrl\n      }\n    }\n  }\n`\n\nexport const Section = styled.div`\n  margin-top: 48px;\n\n  @media screen and (min-width: 1024px) {\n    margin-top: 72px;\n  }\n`\n\nexport const PageDescript = styled.p`\n  margin-top: 4px;\n  font-size: 22px;\n  font-weight: 400;\n  color: ${props => props.theme.subTextColor};\n\n  @media screen and (min-width: 1024px) {\n    font-size: 28px;\n  }\n`\n\nexport const PageTitle = styled.p`\n  font-size: 30px;\n  font-weight: 700;\n\n  @media screen and (min-width: 1024px) {\n    font-size: 36px;\n  }\n`\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nimport styled from 'styled-components'\n\ninterface BlogItemProps {\n  title: string\n  date: string\n  categories: string[]\n  page: string\n  link: string\n}\n\nexport default function BlogItem({\n  title,\n  date,\n  categories,\n  page,\n  link,\n}: BlogItemProps) {\n  return (\n    <BlogItemWrapper to={link}>\n      <Category>\n        {categories?.map(category => (\n          <CategoryItem key={category}>{category}</CategoryItem>\n        ))}\n      </Category>\n      <Title>{title}</Title>\n      <Date>{date}</Date>\n    </BlogItemWrapper>\n  )\n}\n\nconst Date = styled.div`\n  font-size: 13px;\n  line-height: 19px;\n  font-weight: 300;\n`\n\nconst Title = styled.div`\n  font-size: 22px;\n  font-weight: 700;\n  line-height: 32px;\n  margin-top: 13px;\n`\n\nconst CategoryItem = styled.div`\n  height: 34px;\n  padding: 0 13px;\n  border-radius: 13px;\n  font-size: 13px;\n  line-height: 34px;\n  background-color: ${props => props.theme.boxTabColor};\n`\n\nconst Category = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 5px;\n`\n\nconst BlogItemWrapper = styled(Link)`\n  border-radius: 14px;\n  cursor: pointer;\n  padding: 25px 24px;\n  box-shadow: 4px 12px 30px 6px rgb(0 0 0 / 9%);\n  transition: 0.3s box-shadow;\n  &:hover {\n    box-shadow: 4px 12px 30px 6px rgb(0 0 0 / 18%);\n    transform: translateY(-2px);\n  }\n\n  background-color: ${props => props.theme.boxColor};\n`\n","import React, { useMemo } from 'react'\n\nimport styled from 'styled-components'\n\nimport { ItemType } from 'etc/types'\nimport useInfiniteScroll, {\n  useInfiniteScrollType,\n} from 'hooks/useInfiniteScroll'\nimport BlogItem from 'components/Blog/BlogItem'\n\ninterface BlogListProps {\n  selectedCategory: string\n  posts: ItemType[]\n}\n\nexport default function BlogList({ selectedCategory, posts }: BlogListProps) {\n  // const postListData = useMemo(\n  //   () =>\n  //     posts.filter(\n  //       ({\n  //         node: {\n  //           frontmatter: { categories },\n  //         },\n  //       }: PostListItemType) =>\n  //         selectedCategory !== 'All'\n  //           ? categories.includes(selectedCategory)\n  //           : true,\n  //     ),\n  //   [selectedCategory],\n  // )\n\n  const { containerRef, postList }: useInfiniteScrollType = useInfiniteScroll(\n    selectedCategory,\n    posts,\n  )\n  return (\n    <BlogListWrapper ref={containerRef}>\n      {postList.map(\n        ({\n          node: {\n            id,\n            fields: { slug },\n            frontmatter,\n          },\n        }: ItemType) => (\n          <BlogItem {...frontmatter} link={slug} key={id} />\n        ),\n      )}\n    </BlogListWrapper>\n  )\n}\n\nconst BlogListWrapper = styled.div`\n  margin-top: 36px;\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n\n  @media screen and (min-width: 1024px) {\n    margin-top: 48px;\n  }\n`\n","import React, { useMemo } from 'react'\nimport { graphql } from 'gatsby'\nimport queryString, { ParsedQuery } from 'query-string'\n\nimport { PageDescript, PageTitle, Section } from 'pages'\n\nimport { ItemType } from 'etc/types'\nimport Layout from 'components/Layout'\nimport CategoryList, { CategoryListProps } from 'components/CategoryList'\nimport BlogList from 'components/Blog/BlogList'\n\ninterface TechBlogProps {\n  location: {\n    pathname: string\n    search: string\n    href: string\n  }\n  data: {\n    allMarkdownRemark: {\n      edges: ItemType[]\n    }\n  }\n}\n\nexport default function TechBlog({\n  location: { pathname, search, href },\n  data: {\n    allMarkdownRemark: { edges },\n  },\n}: TechBlogProps) {\n  const parsed: ParsedQuery<string> = queryString.parse(search)\n  const selectedCategory: string =\n    typeof parsed.category !== 'string' || !parsed.category\n      ? 'All'\n      : parsed.category\n\n  // tech-blog에 해당하는 게시물\n  const pageEdges = edges.filter(\n    edge => edge.node.frontmatter.page === 'tech-blog',\n  )\n\n  // tech-blog에 해당하는 게시물 중 카테고리 별 개수\n  const categoryList = useMemo(\n    () =>\n      pageEdges.reduce(\n        (\n          list: CategoryListProps['categoryList'],\n          {\n            node: {\n              frontmatter: { categories },\n            },\n          }: ItemType,\n        ) => {\n          categories?.forEach(category => {\n            if (list[category] === undefined) list[category] = 1\n            else list[category]++\n          })\n\n          list['All']++\n\n          return list\n        },\n        { All: 0 },\n      ),\n    [],\n  )\n\n  return (\n    <Layout title=\"Tech Blog\" description=\"개발하면서 남긴 기록\" url={href}>\n      <div>\n        <PageTitle>Tech Blog</PageTitle>\n        <PageDescript>개발하면서 남긴 기록</PageDescript>\n      </div>\n      <Section>\n        {/* 카테고리 */}\n        <CategoryList\n          page={pageEdges[0].node.frontmatter.page}\n          selectedCategory={selectedCategory}\n          categoryList={categoryList}\n        />\n        {/* 게시물 목록 */}\n        <BlogList selectedCategory={selectedCategory} posts={pageEdges} />\n      </Section>\n    </Layout>\n  )\n}\n\nexport const getBlogList = graphql`\n  query getPostList {\n    allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___date, frontmatter___title] }\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            page\n            categories\n            date(formatString: \"YYYY.MM.DD\")\n            title\n          }\n        }\n      }\n    }\n  }\n`\n","const token = '%[a-f0-9]{2}';\nconst singleMatcher = new RegExp('(' + token + ')|([^%]+?)', 'gi');\nconst multiMatcher = new RegExp('(' + token + ')+', 'gi');\n\nfunction decodeComponents(components, split) {\n\ttry {\n\t\t// Try to decode the entire string first\n\t\treturn [decodeURIComponent(components.join(''))];\n\t} catch {\n\t\t// Do nothing\n\t}\n\n\tif (components.length === 1) {\n\t\treturn components;\n\t}\n\n\tsplit = split || 1;\n\n\t// Split the array in 2 parts\n\tconst left = components.slice(0, split);\n\tconst right = components.slice(split);\n\n\treturn Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n}\n\nfunction decode(input) {\n\ttry {\n\t\treturn decodeURIComponent(input);\n\t} catch {\n\t\tlet tokens = input.match(singleMatcher) || [];\n\n\t\tfor (let i = 1; i < tokens.length; i++) {\n\t\t\tinput = decodeComponents(tokens, i).join('');\n\n\t\t\ttokens = input.match(singleMatcher) || [];\n\t\t}\n\n\t\treturn input;\n\t}\n}\n\nfunction customDecodeURIComponent(input) {\n\t// Keep track of all the replacements and prefill the map with the `BOM`\n\tconst replaceMap = {\n\t\t'%FE%FF': '\\uFFFD\\uFFFD',\n\t\t'%FF%FE': '\\uFFFD\\uFFFD',\n\t};\n\n\tlet match = multiMatcher.exec(input);\n\twhile (match) {\n\t\ttry {\n\t\t\t// Decode as big chunks as possible\n\t\t\treplaceMap[match[0]] = decodeURIComponent(match[0]);\n\t\t} catch {\n\t\t\tconst result = decode(match[0]);\n\n\t\t\tif (result !== match[0]) {\n\t\t\t\treplaceMap[match[0]] = result;\n\t\t\t}\n\t\t}\n\n\t\tmatch = multiMatcher.exec(input);\n\t}\n\n\t// Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n\treplaceMap['%C2'] = '\\uFFFD';\n\n\tconst entries = Object.keys(replaceMap);\n\n\tfor (const key of entries) {\n\t\t// Replace all decoded components\n\t\tinput = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n\t}\n\n\treturn input;\n}\n\nexport default function decodeUriComponent(encodedURI) {\n\tif (typeof encodedURI !== 'string') {\n\t\tthrow new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\n\t}\n\n\ttry {\n\t\t// Try the built in decoder first\n\t\treturn decodeURIComponent(encodedURI);\n\t} catch {\n\t\t// Fallback to a more advanced decoder\n\t\treturn customDecodeURIComponent(encodedURI);\n\t}\n}\n","export default function splitOnFirst(string, separator) {\n\tif (!(typeof string === 'string' && typeof separator === 'string')) {\n\t\tthrow new TypeError('Expected the arguments to be of type `string`');\n\t}\n\n\tif (string === '' || separator === '') {\n\t\treturn [];\n\t}\n\n\tconst separatorIndex = string.indexOf(separator);\n\n\tif (separatorIndex === -1) {\n\t\treturn [];\n\t}\n\n\treturn [\n\t\tstring.slice(0, separatorIndex),\n\t\tstring.slice(separatorIndex + separator.length)\n\t];\n}\n","export function includeKeys(object, predicate) {\n\tconst result = {};\n\n\tif (Array.isArray(predicate)) {\n\t\tfor (const key of predicate) {\n\t\t\tconst descriptor = Object.getOwnPropertyDescriptor(object, key);\n\t\t\tif (descriptor?.enumerable) {\n\t\t\t\tObject.defineProperty(result, key, descriptor);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// `Reflect.ownKeys()` is required to retrieve symbol properties\n\t\tfor (const key of Reflect.ownKeys(object)) {\n\t\t\tconst descriptor = Object.getOwnPropertyDescriptor(object, key);\n\t\t\tif (descriptor.enumerable) {\n\t\t\t\tconst value = object[key];\n\t\t\t\tif (predicate(key, value, object)) {\n\t\t\t\t\tObject.defineProperty(result, key, descriptor);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function excludeKeys(object, predicate) {\n\tif (Array.isArray(predicate)) {\n\t\tconst set = new Set(predicate);\n\t\treturn includeKeys(object, key => !set.has(key));\n\t}\n\n\treturn includeKeys(object, (key, value, object) => !predicate(key, value, object));\n}\n","import decodeComponent from 'decode-uri-component';\nimport splitOnFirst from 'split-on-first';\nimport {includeKeys} from 'filter-obj';\n\nconst isNullOrUndefined = value => value === null || value === undefined;\n\n// eslint-disable-next-line unicorn/prefer-code-point\nconst strictUriEncode = string => encodeURIComponent(string).replace(/[!'()*]/g, x => `%${x.charCodeAt(0).toString(16).toUpperCase()}`);\n\nconst encodeFragmentIdentifier = Symbol('encodeFragmentIdentifier');\n\nfunction encoderForArrayFormat(options) {\n\tswitch (options.arrayFormat) {\n\t\tcase 'index': {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tconst index = result.length;\n\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result, [encode(key, options), '[', index, ']'].join(''),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\n\t\tcase 'bracket': {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result,\n\t\t\t\t\t\t[encode(key, options), '[]'].join(''),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[]=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\n\t\tcase 'colon-list-separator': {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result,\n\t\t\t\t\t\t[encode(key, options), ':list='].join(''),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), ':list=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\tcase 'bracket-separator': {\n\t\t\tconst keyValueSep = options.arrayFormat === 'bracket-separator'\n\t\t\t\t? '[]='\n\t\t\t\t: '=';\n\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\t// Translate null to an empty string so that it doesn't serialize as 'null'\n\t\t\t\tvalue = value === null ? '' : value;\n\n\t\t\t\tif (result.length === 0) {\n\t\t\t\t\treturn [[encode(key, options), keyValueSep, encode(value, options)].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [[result, encode(value, options)].join(options.arrayFormatSeparator)];\n\t\t\t};\n\t\t}\n\n\t\tdefault: {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result,\n\t\t\t\t\t\tencode(key, options),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\t}\n}\n\nfunction parserForArrayFormat(options) {\n\tlet result;\n\n\tswitch (options.arrayFormat) {\n\t\tcase 'index': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /\\[(\\d*)]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\t\t}\n\n\t\tcase 'bracket': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(\\[])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...accumulator[key], value];\n\t\t\t};\n\t\t}\n\n\t\tcase 'colon-list-separator': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(:list)$/.exec(key);\n\t\t\t\tkey = key.replace(/:list$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...accumulator[key], value];\n\t\t\t};\n\t\t}\n\n\t\tcase 'comma':\n\t\tcase 'separator': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = typeof value === 'string' && value.includes(options.arrayFormatSeparator);\n\t\t\t\tconst isEncodedArray = (typeof value === 'string' && !isArray && decode(value, options).includes(options.arrayFormatSeparator));\n\t\t\t\tvalue = isEncodedArray ? decode(value, options) : value;\n\t\t\t\tconst newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map(item => decode(item, options)) : (value === null ? value : decode(value, options));\n\t\t\t\taccumulator[key] = newValue;\n\t\t\t};\n\t\t}\n\n\t\tcase 'bracket-separator': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = /(\\[])$/.test(key);\n\t\t\t\tkey = key.replace(/\\[]$/, '');\n\n\t\t\t\tif (!isArray) {\n\t\t\t\t\taccumulator[key] = value ? decode(value, options) : value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst arrayValue = value === null\n\t\t\t\t\t? []\n\t\t\t\t\t: value.split(options.arrayFormatSeparator).map(item => decode(item, options));\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = arrayValue;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...accumulator[key], ...arrayValue];\n\t\t\t};\n\t\t}\n\n\t\tdefault: {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...[accumulator[key]].flat(), value];\n\t\t\t};\n\t\t}\n\t}\n}\n\nfunction validateArrayFormatSeparator(value) {\n\tif (typeof value !== 'string' || value.length !== 1) {\n\t\tthrow new TypeError('arrayFormatSeparator must be single character string');\n\t}\n}\n\nfunction encode(value, options) {\n\tif (options.encode) {\n\t\treturn options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction decode(value, options) {\n\tif (options.decode) {\n\t\treturn decodeComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t}\n\n\tif (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input))\n\t\t\t.sort((a, b) => Number(a) - Number(b))\n\t\t\t.map(key => input[key]);\n\t}\n\n\treturn input;\n}\n\nfunction removeHash(input) {\n\tconst hashStart = input.indexOf('#');\n\tif (hashStart !== -1) {\n\t\tinput = input.slice(0, hashStart);\n\t}\n\n\treturn input;\n}\n\nfunction getHash(url) {\n\tlet hash = '';\n\tconst hashStart = url.indexOf('#');\n\tif (hashStart !== -1) {\n\t\thash = url.slice(hashStart);\n\t}\n\n\treturn hash;\n}\n\nfunction parseValue(value, options) {\n\tif (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === 'string' && value.trim() !== '')) {\n\t\tvalue = Number(value);\n\t} else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\n\t\tvalue = value.toLowerCase() === 'true';\n\t}\n\n\treturn value;\n}\n\nexport function extract(input) {\n\tinput = removeHash(input);\n\tconst queryStart = input.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\n\treturn input.slice(queryStart + 1);\n}\n\nexport function parse(query, options) {\n\toptions = {\n\t\tdecode: true,\n\t\tsort: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',',\n\t\tparseNumbers: false,\n\t\tparseBooleans: false,\n\t\t...options,\n\t};\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst formatter = parserForArrayFormat(options);\n\n\t// Create an object with no prototype\n\tconst returnValue = Object.create(null);\n\n\tif (typeof query !== 'string') {\n\t\treturn returnValue;\n\t}\n\n\tquery = query.trim().replace(/^[?#&]/, '');\n\n\tif (!query) {\n\t\treturn returnValue;\n\t}\n\n\tfor (const parameter of query.split('&')) {\n\t\tif (parameter === '') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst parameter_ = options.decode ? parameter.replace(/\\+/g, ' ') : parameter;\n\n\t\tlet [key, value] = splitOnFirst(parameter_, '=');\n\n\t\tif (key === undefined) {\n\t\t\tkey = parameter_;\n\t\t}\n\n\t\t// Missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tvalue = value === undefined ? null : (['comma', 'separator', 'bracket-separator'].includes(options.arrayFormat) ? value : decode(value, options));\n\t\tformatter(decode(key, options), value, returnValue);\n\t}\n\n\tfor (const [key, value] of Object.entries(returnValue)) {\n\t\tif (typeof value === 'object' && value !== null) {\n\t\t\tfor (const [key2, value2] of Object.entries(value)) {\n\t\t\t\tvalue[key2] = parseValue(value2, options);\n\t\t\t}\n\t\t} else {\n\t\t\treturnValue[key] = parseValue(value, options);\n\t\t}\n\t}\n\n\tif (options.sort === false) {\n\t\treturn returnValue;\n\t}\n\n\t// TODO: Remove the use of `reduce`.\n\t// eslint-disable-next-line unicorn/no-array-reduce\n\treturn (options.sort === true ? Object.keys(returnValue).sort() : Object.keys(returnValue).sort(options.sort)).reduce((result, key) => {\n\t\tconst value = returnValue[key];\n\t\tif (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(value);\n\t\t} else {\n\t\t\tresult[key] = value;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nexport function stringify(object, options) {\n\tif (!object) {\n\t\treturn '';\n\t}\n\n\toptions = {encode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',', ...options};\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst shouldFilter = key => (\n\t\t(options.skipNull && isNullOrUndefined(object[key]))\n\t\t|| (options.skipEmptyString && object[key] === '')\n\t);\n\n\tconst formatter = encoderForArrayFormat(options);\n\n\tconst objectCopy = {};\n\n\tfor (const [key, value] of Object.entries(object)) {\n\t\tif (!shouldFilter(key)) {\n\t\t\tobjectCopy[key] = value;\n\t\t}\n\t}\n\n\tconst keys = Object.keys(objectCopy);\n\n\tif (options.sort !== false) {\n\t\tkeys.sort(options.sort);\n\t}\n\n\treturn keys.map(key => {\n\t\tconst value = object[key];\n\n\t\tif (value === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (value === null) {\n\t\t\treturn encode(key, options);\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\tif (value.length === 0 && options.arrayFormat === 'bracket-separator') {\n\t\t\t\treturn encode(key, options) + '[]';\n\t\t\t}\n\n\t\t\treturn value\n\t\t\t\t.reduce(formatter(key), [])\n\t\t\t\t.join('&');\n\t\t}\n\n\t\treturn encode(key, options) + '=' + encode(value, options);\n\t}).filter(x => x.length > 0).join('&');\n}\n\nexport function parseUrl(url, options) {\n\toptions = {\n\t\tdecode: true,\n\t\t...options,\n\t};\n\n\tlet [url_, hash] = splitOnFirst(url, '#');\n\n\tif (url_ === undefined) {\n\t\turl_ = url;\n\t}\n\n\treturn {\n\t\turl: url_?.split('?')?.[0] ?? '',\n\t\tquery: parse(extract(url), options),\n\t\t...(options && options.parseFragmentIdentifier && hash ? {fragmentIdentifier: decode(hash, options)} : {}),\n\t};\n}\n\nexport function stringifyUrl(object, options) {\n\toptions = {\n\t\tencode: true,\n\t\tstrict: true,\n\t\t[encodeFragmentIdentifier]: true,\n\t\t...options,\n\t};\n\n\tconst url = removeHash(object.url).split('?')[0] || '';\n\tconst queryFromUrl = extract(object.url);\n\n\tconst query = {\n\t\t...parse(queryFromUrl, {sort: false}),\n\t\t...object.query,\n\t};\n\n\tlet queryString = stringify(query, options);\n\tif (queryString) {\n\t\tqueryString = `?${queryString}`;\n\t}\n\n\tlet hash = getHash(object.url);\n\tif (object.fragmentIdentifier) {\n\t\tconst urlObjectForFragmentEncode = new URL(url);\n\t\turlObjectForFragmentEncode.hash = object.fragmentIdentifier;\n\t\thash = options[encodeFragmentIdentifier] ? urlObjectForFragmentEncode.hash : `#${object.fragmentIdentifier}`;\n\t}\n\n\treturn `${url}${queryString}${hash}`;\n}\n\nexport function pick(input, filter, options) {\n\toptions = {\n\t\tparseFragmentIdentifier: true,\n\t\t[encodeFragmentIdentifier]: false,\n\t\t...options,\n\t};\n\n\tconst {url, query, fragmentIdentifier} = parseUrl(input, options);\n\n\treturn stringifyUrl({\n\t\turl,\n\t\tquery: includeKeys(query, filter),\n\t\tfragmentIdentifier,\n\t}, options);\n}\n\nexport function exclude(input, filter, options) {\n\tconst exclusionFilter = Array.isArray(filter) ? key => !filter.includes(key) : (key, value) => !filter(key, value);\n\n\treturn pick(input, exclusionFilter, options);\n}\n","import * as queryString from './base.js';\n\nexport default queryString;\n"],"names":["CategoryList","page","selectedCategory","categoryList","React","CategoryListWrapper","Object","entries","map","_ref2","name","count","CategoryItem","to","active","key","styled","_ref3","props","Link","theme","bgColor","selectBoxColor","textColor","tabColor","useInfiniteScroll","posts","containerRef","useRef","observer","setCount","useState","postListByCategory","useMemo","filter","_ref","node","frontmatter","categories","includes","useEffect","current","IntersectionObserver","isIntersecting","value","unobserve","target","length","children","observe","postList","slice","Home","location","search","data","site","siteMetadata","title","description","siteUrl","Layout","url","PageTitle","PageDescript","Section","displayName","componentId","subTextColor","BlogItem","date","link","BlogItemWrapper","Category","category","Title","Date","boxTabColor","boxColor","BlogList","BlogListWrapper","ref","id","fields","slug","TechBlog","pathname","href","allMarkdownRemark","edges","parsed","queryString","pageEdges","edge","reduce","list","forEach","undefined","All","token","singleMatcher","RegExp","multiMatcher","decodeComponents","components","split","decodeURIComponent","join","left","right","Array","prototype","concat","call","decode","input","tokens","match","i","decodeUriComponent","encodedURI","TypeError","replaceMap","exec","result","keys","replace","customDecodeURIComponent","splitOnFirst","string","separator","separatorIndex","indexOf","includeKeys","object","predicate","isArray","descriptor","getOwnPropertyDescriptor","enumerable","defineProperty","Reflect","ownKeys","encodeFragmentIdentifier","Symbol","validateArrayFormatSeparator","encode","options","strict","encodeURIComponent","x","charCodeAt","toString","toUpperCase","keysSorter","sort","a","b","Number","removeHash","hashStart","parseValue","parseNumbers","isNaN","trim","parseBooleans","toLowerCase","extract","queryStart","parse","query","arrayFormat","arrayFormatSeparator","formatter","accumulator","isEncodedArray","newValue","item","test","arrayValue","flat","parserForArrayFormat","returnValue","create","parameter","parameter_","key2","value2","Boolean","stringify","shouldFilter","skipNull","skipEmptyString","index","keyValueSep","encoderForArrayFormat","objectCopy","parseUrl","url_","hash","parseFragmentIdentifier","fragmentIdentifier","stringifyUrl","getHash","urlObjectForFragmentEncode","URL","pick","exclude"],"sourceRoot":""}