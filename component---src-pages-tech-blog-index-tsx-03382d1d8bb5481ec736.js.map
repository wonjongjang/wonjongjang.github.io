{"version":3,"file":"component---src-pages-tech-blog-index-tsx-03382d1d8bb5481ec736.js","mappings":"sQAae,SAASA,EAAS,GAMf,IANe,MAC/BC,EAAK,KACLC,EAAI,WACJC,EAAU,KACVC,EAAI,KACJC,GACc,EACd,OACEC,EAAAA,cAACC,EAAe,CAACC,GAAIH,GACnBC,EAAAA,cAACG,EAAQ,KACNN,aAAU,EAAVA,EAAYO,KAAIC,GACfL,EAAAA,cAACM,EAAY,CAACC,IAAKF,GAAWA,MAGlCL,EAAAA,cAACQ,EAAK,KAAEb,GACRK,EAAAA,cAACS,EAAI,KAAEb,GAGb,CAEA,MAAMa,EAAOC,EAAAA,QAAAA,IAAAA,WAAU,CAAAC,YAAAA,iBAAAC,YAAAA,gBAAVF,CAAU,sDAMjBF,EAAQE,EAAAA,QAAAA,IAAAA,WAAU,CAAAC,YAAAA,kBAAAC,YAAAA,gBAAVF,CAAU,sEAOlBJ,EAAeI,EAAAA,QAAAA,IAAAA,WAAU,CAAAC,YAAAA,yBAAAC,YAAAA,gBAAVF,CAAU,yGAMTG,GAASA,EAAMC,MAAMC,OAAOC,cAG5Cb,EAAWO,EAAAA,QAAAA,IAAAA,WAAU,CAAAC,YAAAA,qBAAAC,YAAAA,gBAAVF,CAAU,0CAMrBT,GAAkBS,EAAAA,EAAAA,SAAOO,EAAAA,IAAK,YAAAN,YAAAA,4BAAAC,YAAAA,gBAAZF,CAAY,yOAWdG,GAASA,EAAMC,MAAMC,OAAOG,WCzDnC,SAASC,EAAS,GAA6C,IAA7C,iBAAEC,EAAgB,MAAEC,GAAsB,EAgBzE,MAAM,aAAEC,EAAY,SAAEC,IAAoCC,EAAAA,EAAAA,GACxDJ,EACAC,GAEF,OACErB,EAAAA,cAACyB,EAAe,CAACC,IAAKJ,GACnBC,EAASnB,KACRuB,IAAAA,IACEC,MAAM,GACJC,EACAC,QAAQ,KAAEC,GAAM,YAChBC,IAEO,SACThC,EAAAA,cAACN,EAAQ,iBAAKsC,EAAW,CAAEjC,KAAMgC,EAAMxB,IAAKsB,IAAM,IAK5D,CAEA,MAAMJ,EAAkBf,EAAAA,QAAAA,IAAAA,WAAU,oEAAVA,CAAU,wHC5BnB,SAASuB,EAAS,GAKf,IAJhBC,UAAU,SAAEC,EAAQ,OAAEC,EAAM,KAAEC,GAC9BC,MACEC,mBAAmB,MAAEC,KAET,EACd,MAAMC,EAA8BC,EAAAA,EAAAA,MAAkBN,GAChDhB,EACuB,iBAApBqB,EAAOpC,UAA0BoC,EAAOpC,SAE3CoC,EAAOpC,SADP,MAIAsC,EAAYH,EAAMI,QACtBC,GAAuC,cAA/BA,EAAKjB,KAAKI,YAAYlC,OAI1BgD,GAAeC,EAAAA,EAAAA,UACnB,IACEJ,EAAUK,QACR,CACEC,EAAuC,KAMpC,IAJDrB,MACEI,aAAa,WAAEnC,KAER,EASX,OAPAA,SAAAA,EAAYqD,SAAQ7C,SACK8C,IAAnBF,EAAK5C,GAAyB4C,EAAK5C,GAAY,EAC9C4C,EAAK5C,IAAW,IAGvB4C,EAAU,MAEHA,CAAI,GAEb,CAAEG,IAAK,KAEX,IAGF,OACEpD,EAAAA,cAACqD,EAAAA,EAAM,CAAC1D,MAAM,YAAY2D,YAAY,cAAcC,IAAKlB,GACvDrC,EAAAA,cAACwD,EAAAA,gBAAe,KACdxD,EAAAA,cAACyD,EAAAA,UAAS,KAAC,aACXzD,EAAAA,cAAC0D,EAAAA,aAAY,KAAC,gBAEhB1D,EAAAA,cAAC2D,EAAAA,QAAO,KAEN3D,EAAAA,cAAC4D,EAAAA,EAAY,CACX9D,KAAM6C,EAAU,GAAGf,KAAKI,YAAYlC,KACpCsB,iBAAkBA,EAClB0B,aAAcA,IAGhB9C,EAAAA,cAACmB,EAAQ,CAACC,iBAAkBA,EAAkBC,MAAOsB,KAI7D,C","sources":["webpack://gatsby-starter-default/./src/components/Blog/BlogItem/index.tsx","webpack://gatsby-starter-default/./src/components/Blog/BlogList/index.tsx","webpack://gatsby-starter-default/./src/pages/tech-blog/index.tsx"],"sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\n\nimport styled from 'styled-components'\n\ninterface BlogItemProps {\n  title: string\n  date: string\n  categories: string[]\n  page: string\n  link: string\n}\n\nexport default function BlogItem({\n  title,\n  date,\n  categories,\n  page,\n  link,\n}: BlogItemProps) {\n  return (\n    <BlogItemWrapper to={link}>\n      <Category>\n        {categories?.map(category => (\n          <CategoryItem key={category}>{category}</CategoryItem>\n        ))}\n      </Category>\n      <Title>{title}</Title>\n      <Date>{date}</Date>\n    </BlogItemWrapper>\n  )\n}\n\nconst Date = styled.div`\n  font-size: 13px;\n  line-height: 19px;\n  font-weight: 300;\n`\n\nconst Title = styled.div`\n  font-size: 22px;\n  font-weight: 700;\n  line-height: 32px;\n  margin-top: 13px;\n`\n\nconst CategoryItem = styled.div`\n  height: 34px;\n  padding: 0 15px;\n  border-radius: 34px;\n  font-size: 13px;\n  line-height: 34px;\n  background-color: ${props => props.theme.colors.boxTabColor};\n`\n\nconst Category = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 5px;\n`\n\nconst BlogItemWrapper = styled(Link)`\n  border-radius: 14px;\n  cursor: pointer;\n  padding: 25px 24px;\n  box-shadow: 4px 12px 30px 6px rgb(0 0 0 / 9%);\n  transition: 0.3s box-shadow;\n  &:hover {\n    box-shadow: 4px 12px 30px 6px rgb(0 0 0 / 18%);\n    transform: translateY(-2px);\n  }\n\n  background-color: ${props => props.theme.colors.boxColor};\n`\n","import React, { useMemo } from 'react'\n\nimport styled from 'styled-components'\n\nimport { ItemType } from 'etc/types'\nimport useInfiniteScroll, {\n  useInfiniteScrollType,\n} from 'hooks/useInfiniteScroll'\nimport BlogItem from 'components/Blog/BlogItem'\n\ninterface BlogListProps {\n  selectedCategory: string\n  posts: ItemType[]\n}\n\nexport default function BlogList({ selectedCategory, posts }: BlogListProps) {\n  // const postListData = useMemo(\n  //   () =>\n  //     posts.filter(\n  //       ({\n  //         node: {\n  //           frontmatter: { categories },\n  //         },\n  //       }: PostListItemType) =>\n  //         selectedCategory !== 'All'\n  //           ? categories.includes(selectedCategory)\n  //           : true,\n  //     ),\n  //   [selectedCategory],\n  // )\n\n  const { containerRef, postList }: useInfiniteScrollType = useInfiniteScroll(\n    selectedCategory,\n    posts,\n  )\n  return (\n    <BlogListWrapper ref={containerRef}>\n      {postList.map(\n        ({\n          node: {\n            id,\n            fields: { slug },\n            frontmatter,\n          },\n        }: ItemType) => (\n          <BlogItem {...frontmatter} link={slug} key={id} />\n        ),\n      )}\n    </BlogListWrapper>\n  )\n}\n\nconst BlogListWrapper = styled.div`\n  margin-top: 36px;\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n\n  @media screen and (min-width: 1024px) {\n    margin-top: 48px;\n  }\n`\n","import React, { useMemo } from 'react'\nimport { graphql } from 'gatsby'\nimport queryString, { ParsedQuery } from 'query-string'\n\nimport { FadeInAnimation, PageDescript, PageTitle, Section } from 'pages'\n\nimport { ItemType } from 'etc/types'\nimport Layout from 'components/Layout'\nimport CategoryList, { CategoryListProps } from 'components/CategoryList'\nimport BlogList from 'components/Blog/BlogList'\n\ninterface TechBlogProps {\n  location: {\n    pathname: string\n    search: string\n    href: string\n  }\n  data: {\n    allMarkdownRemark: {\n      edges: ItemType[]\n    }\n  }\n}\n\nexport default function TechBlog({\n  location: { pathname, search, href },\n  data: {\n    allMarkdownRemark: { edges },\n  },\n}: TechBlogProps) {\n  const parsed: ParsedQuery<string> = queryString.parse(search)\n  const selectedCategory: string =\n    typeof parsed.category !== 'string' || !parsed.category\n      ? 'All'\n      : parsed.category\n\n  // tech-blog에 해당하는 게시물\n  const pageEdges = edges.filter(\n    edge => edge.node.frontmatter.page === 'tech-blog',\n  )\n\n  // tech-blog에 해당하는 게시물 중 카테고리 별 개수\n  const categoryList = useMemo(\n    () =>\n      pageEdges.reduce(\n        (\n          list: CategoryListProps['categoryList'],\n          {\n            node: {\n              frontmatter: { categories },\n            },\n          }: ItemType,\n        ) => {\n          categories?.forEach(category => {\n            if (list[category] === undefined) list[category] = 1\n            else list[category]++\n          })\n\n          list['All']++\n\n          return list\n        },\n        { All: 0 },\n      ),\n    [],\n  )\n\n  return (\n    <Layout title=\"Tech Blog\" description=\"개발하면서 남긴 기록\" url={href}>\n      <FadeInAnimation>\n        <PageTitle>Tech Blog</PageTitle>\n        <PageDescript>개발하면서 남긴 기록</PageDescript>\n      </FadeInAnimation>\n      <Section>\n        {/* 카테고리 */}\n        <CategoryList\n          page={pageEdges[0].node.frontmatter.page}\n          selectedCategory={selectedCategory}\n          categoryList={categoryList}\n        />\n        {/* 게시물 목록 */}\n        <BlogList selectedCategory={selectedCategory} posts={pageEdges} />\n      </Section>\n    </Layout>\n  )\n}\n\nexport const getBlogList = graphql`\n  query getPostList {\n    allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___date, frontmatter___title] }\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            page\n            categories\n            date(formatString: \"YYYY.MM.DD\")\n            title\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["BlogItem","title","date","categories","page","link","React","BlogItemWrapper","to","Category","map","category","CategoryItem","key","Title","Date","styled","displayName","componentId","props","theme","colors","boxTabColor","Link","boxColor","BlogList","selectedCategory","posts","containerRef","postList","useInfiniteScroll","BlogListWrapper","ref","_ref2","node","id","fields","slug","frontmatter","TechBlog","location","pathname","search","href","data","allMarkdownRemark","edges","parsed","queryString","pageEdges","filter","edge","categoryList","useMemo","reduce","list","forEach","undefined","All","Layout","description","url","FadeInAnimation","PageTitle","PageDescript","Section","CategoryList"],"sourceRoot":""}